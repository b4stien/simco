{"version":3,"sources":["webpack:///app.js","webpack:///./actions.js","webpack:///./graph.js","webpack:///./reducer.js","webpack:///./worker.js","webpack:///./main.js","webpack:///../~/d3/d3.js"],"names":["webpackJsonp",136,"module","exports","__webpack_require__","CHANGE_UNIQUE_RIDES","Object","defineProperty","configurable","enumerable","get","CHANGE_PEOPLE","START_COMPUTE","END_COMPUTE","TOGGLE_ADVANCED","CHANGE_ITERATIONS","CHANGE_MAX_LENGTH","CHANGE_TRIM",202,"_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","create","constructor","value","writable","setPrototypeOf","__proto__","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","__esModule","__WEBPACK_IMPORTED_MODULE_1_d3__","__WEBPACK_IMPORTED_MODULE_1_d3___default","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","SimcoGraph","_React$Component","this","getPrototypeOf","apply","arguments","displaySVGChart","refs","svgChart","innerHTML","data","results","margin","top","right","bottom","left","width","getBoundingClientRect","height","x","a","scale","ordinal","rangeRoundBands","y","linear","range","xAxis","svg","axis","orient","yAxis","ticks","select","append","attr","domain","map","d","label","max","freq","text","style","selectAll","enter","rangeBand","createElement","ref","marginTop","Component",203,"makeResults","worker","state","action","wholeState","undefined","__WEBPACK_IMPORTED_MODULE_0_immutable___default","Map","isComputing","hasComputed","type","__WEBPACK_IMPORTED_MODULE_1__actions__","postMessage","MAX_LENGTH","PEOPLE_IN_CAR","ITERATIONS","TRIM","people","uniqueRides","set","advanced","shown","parseInt","iterations","maxLength","trim","makeReducer","__WEBPACK_IMPORTED_MODULE_0_immutable__",206,"e","Worker","p",207,"mountSimcoApp","options","__WEBPACK_IMPORTED_MODULE_7_worker_worker___default","store","__WEBPACK_IMPORTED_MODULE_2_redux__","bind","__WEBPACK_IMPORTED_MODULE_6__reducer__","onmessage","event","dispatch","__WEBPACK_IMPORTED_MODULE_4__actions__","formattedFrequencies","__WEBPACK_IMPORTED_MODULE_1_react_dom___default","render","__WEBPACK_IMPORTED_MODULE_3_react_redux__","Simco","node","__WEBPACK_IMPORTED_MODULE_1_react_dom__","__WEBPACK_IMPORTED_MODULE_2_redux___default","__WEBPACK_IMPORTED_MODULE_3_react_redux___default","__WEBPACK_IMPORTED_MODULE_5__graph__","__WEBPACK_IMPORTED_MODULE_7_worker_worker__","SimcoUnconnected","_this2","display","flexDirection","maxWidth","flex","padding","marginBottom","min","onChange","step","alignItems","disabled","onClick","paddingRight","textAlign","fontSize","href","preventDefault","window",387,"__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_documentElement","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","b","NaN","d3_number","d3_numeric","isNaN","d3_bisector","compare","lo","hi","mid","d3_transposeLength","d3_range_integerScale","k","d3_class","ctor","properties","d3_Map","_","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","keys","push","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","source","method","d3_vendorSymbol","object","name","charAt","toUpperCase","n","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","l","z","listeners","on","listenerByName","listener","indexOf","concat","remove","d3_eventPreventDefault","d3","d3_eventSource","s","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","d3_selection_classedName","re","c","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","d3_nsXhtml","createElementNS","createNS","d3_selectionRemove","parent","parentNode","removeChild","d3_selection_dataNode","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","m","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","addEventListener","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","scrollX","scrollY","position","border","ctm","getScreenCTM","f","pageX","pageY","clientX","clientY","matrixTransform","inverse","rect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","Math","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","toString","format","hsl","color","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","forEach","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer","delay","then","Date","now","time","timer","t","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","clearTimeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","Infinity","d3_format_precision","ceil","log","LN10","d3_formatPrefix","abs","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","substring","reverse","join","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","Array","d3_date_utc","UTC","d3_time_interval","number","date","d0","d1","offset","d3_date","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","hasOwnProperty","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","root","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","transform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","input","Number","rangeRound","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","active","count","interrupt","d3_transition","id","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","schedule","elapsed","transition","cancelId","cancel","tick","tweens","ease","duration","d3_svg_axisX","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","transpose","matrix","row","zip","entries","arrays","merged","Error","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","property","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","html","appendChild","insertBefore","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","correspondingElement","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","coshr0","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","tops","bottoms","default","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML"],"mappings":"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","file":"app.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 136:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar CHANGE_UNIQUE_RIDES = 'CHANGE_UNIQUE_RIDES';\n\t/* harmony export */ Object.defineProperty(exports, \"CHANGE_UNIQUE_RIDES\", {configurable: false, enumerable: true, get: function() { return CHANGE_UNIQUE_RIDES; }});\n\tvar CHANGE_PEOPLE = 'CHANGE_PEOPLE';\n\t/* harmony export */ Object.defineProperty(exports, \"CHANGE_PEOPLE\", {configurable: false, enumerable: true, get: function() { return CHANGE_PEOPLE; }});\n\t\n\tvar START_COMPUTE = 'START_COMPUTE';\n\t/* harmony export */ Object.defineProperty(exports, \"START_COMPUTE\", {configurable: false, enumerable: true, get: function() { return START_COMPUTE; }});\n\tvar END_COMPUTE = 'END_COMPUTE';\n\t/* harmony export */ Object.defineProperty(exports, \"END_COMPUTE\", {configurable: false, enumerable: true, get: function() { return END_COMPUTE; }});\n\t\n\tvar TOGGLE_ADVANCED = 'TOGGLE_ADVANCED';\n\t/* harmony export */ Object.defineProperty(exports, \"TOGGLE_ADVANCED\", {configurable: false, enumerable: true, get: function() { return TOGGLE_ADVANCED; }});\n\tvar CHANGE_ITERATIONS = 'CHANGE_ITERATIONS';\n\t/* harmony export */ Object.defineProperty(exports, \"CHANGE_ITERATIONS\", {configurable: false, enumerable: true, get: function() { return CHANGE_ITERATIONS; }});\n\tvar CHANGE_MAX_LENGTH = 'CHANGE_MAX_LENGTH';\n\t/* harmony export */ Object.defineProperty(exports, \"CHANGE_MAX_LENGTH\", {configurable: false, enumerable: true, get: function() { return CHANGE_MAX_LENGTH; }});\n\tvar CHANGE_TRIM = 'CHANGE_TRIM';\n\t/* harmony export */ Object.defineProperty(exports, \"CHANGE_TRIM\", {configurable: false, enumerable: true, get: function() { return CHANGE_TRIM; }});\n\n/***/ },\n\n/***/ 202:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(44);\n\t/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __WEBPACK_IMPORTED_MODULE_0_react__ && __WEBPACK_IMPORTED_MODULE_0_react__.__esModule ? function() { return __WEBPACK_IMPORTED_MODULE_0_react__['default'] } : function() { return __WEBPACK_IMPORTED_MODULE_0_react__; }\n\t/* harmony import */ Object.defineProperty(__WEBPACK_IMPORTED_MODULE_0_react___default, 'a', { get: __WEBPACK_IMPORTED_MODULE_0_react___default });\n\t/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_d3__ = __webpack_require__(387);\n\t/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_d3___default = __WEBPACK_IMPORTED_MODULE_1_d3__ && __WEBPACK_IMPORTED_MODULE_1_d3__.__esModule ? function() { return __WEBPACK_IMPORTED_MODULE_1_d3__['default'] } : function() { return __WEBPACK_IMPORTED_MODULE_1_d3__; }\n\t/* harmony import */ Object.defineProperty(__WEBPACK_IMPORTED_MODULE_1_d3___default, 'a', { get: __WEBPACK_IMPORTED_MODULE_1_d3___default });\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t\n\t\n\t\n\t\n\tvar SimcoGraph = function (_React$Component) {\n\t    _inherits(SimcoGraph, _React$Component);\n\t\n\t    function SimcoGraph() {\n\t        _classCallCheck(this, SimcoGraph);\n\t\n\t        return _possibleConstructorReturn(this, Object.getPrototypeOf(SimcoGraph).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(SimcoGraph, [{\n\t        key: 'componentDidMount',\n\t        value: function componentDidMount() {\n\t            this.displaySVGChart();\n\t        }\n\t    }, {\n\t        key: 'componentDidUpdate',\n\t        value: function componentDidUpdate() {\n\t            this.displaySVGChart();\n\t        }\n\t    }, {\n\t        key: 'displaySVGChart',\n\t        value: function displaySVGChart() {\n\t            this.refs.svgChart.innerHTML = null;\n\t            var data = this.props.results.get('data');\n\t\n\t            var margin = { top: 50, right: 50, bottom: 50, left: 50 },\n\t                width = this.refs.svgChart.getBoundingClientRect().width - margin.left - margin.right,\n\t                height = 500 - margin.top - margin.bottom;\n\t\n\t            var x = /* harmony import */__WEBPACK_IMPORTED_MODULE_1_d3___default.a.scale.ordinal().rangeRoundBands([0, width], .1);\n\t\n\t            var y = /* harmony import */__WEBPACK_IMPORTED_MODULE_1_d3___default.a.scale.linear().range([height, 0]);\n\t\n\t            var xAxis = /* harmony import */__WEBPACK_IMPORTED_MODULE_1_d3___default.a.svg.axis().scale(x).orient(\"bottom\");\n\t\n\t            var yAxis = /* harmony import */__WEBPACK_IMPORTED_MODULE_1_d3___default.a.svg.axis().scale(y).orient(\"left\").ticks(10, \"%\");\n\t\n\t            var svg = /* harmony import */__WEBPACK_IMPORTED_MODULE_1_d3___default.a.select(this.refs.svgChart).append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\t\n\t            x.domain(data.map(function (d) {\n\t                return d.label;\n\t            }));\n\t            y.domain([0, /* harmony import */__WEBPACK_IMPORTED_MODULE_1_d3___default.a.max(data, function (d) {\n\t                return d.freq;\n\t            })]);\n\t\n\t            svg.append(\"g\").attr(\"class\", \"x axis\").attr(\"transform\", \"translate(0,\" + height + \")\").call(xAxis).append(\"text\").attr(\"transform\", \"translate(\" + (width - 100) + \", 30)\").text(\"Trajets partagés\");\n\t\n\t            svg.append(\"g\").attr(\"class\", \"y axis\").call(yAxis).append(\"text\").attr(\"transform\", \"rotate(-90)\").attr(\"y\", 6).attr(\"dy\", \".71em\").style(\"text-anchor\", \"end\").text(\"Fréquence\");\n\t\n\t            svg.selectAll(\".bar\").data(data).enter().append(\"rect\").attr(\"class\", \"bar\").attr(\"x\", function (d) {\n\t                return x(d.label);\n\t            }).attr(\"width\", x.rangeBand()).attr(\"y\", function (d) {\n\t                return y(d.freq);\n\t            }).attr(\"height\", function (d) {\n\t                return height - y(d.freq);\n\t            });\n\t        }\n\t    }, {\n\t        key: 'render',\n\t        value: function render() {\n\t            return /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div', { ref: 'svgChart', style: { marginTop: '50px' } });\n\t        }\n\t    }]);\n\t\n\t    return SimcoGraph;\n\t}(/* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);\n\t/* harmony export */ Object.defineProperty(exports, \"a\", {configurable: false, enumerable: true, get: function() { return SimcoGraph; }});\n\n/***/ },\n\n/***/ 203:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_immutable__ = __webpack_require__(137);\n\t/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_immutable___default = __WEBPACK_IMPORTED_MODULE_0_immutable__ && __WEBPACK_IMPORTED_MODULE_0_immutable__.__esModule ? function() { return __WEBPACK_IMPORTED_MODULE_0_immutable__['default'] } : function() { return __WEBPACK_IMPORTED_MODULE_0_immutable__; }\n\t/* harmony import */ Object.defineProperty(__WEBPACK_IMPORTED_MODULE_0_immutable___default, 'a', { get: __WEBPACK_IMPORTED_MODULE_0_immutable___default });\n\t/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__actions__ = __webpack_require__(136);\n\t/* harmony export */ exports[\"a\"] = makeReducer;'use strict';\n\t\n\t\n\t\n\t\n\t\n\tfunction makeResults(worker) {\n\t    return function results(state, action, wholeState) {\n\t        if (state === undefined) {\n\t            state = /* harmony import */__WEBPACK_IMPORTED_MODULE_0_immutable___default.a.Map({\n\t                isComputing: false,\n\t                hasComputed: false,\n\t                data: []\n\t            });\n\t        }\n\t\n\t        if (action.type === /* harmony namespace import */ __WEBPACK_IMPORTED_MODULE_1__actions__.START_COMPUTE) {\n\t            worker.postMessage({\n\t                MAX_LENGTH: wholeState.get('advanced').get('MAX_LENGTH'),\n\t                PEOPLE_IN_CAR: wholeState.get('advanced').get('PEOPLE_IN_CAR'),\n\t                ITERATIONS: wholeState.get('advanced').get('ITERATIONS'),\n\t                TRIM: wholeState.get('advanced').get('TRIM'),\n\t                people: wholeState.get('people'),\n\t                uniqueRides: wholeState.get('uniqueRides')\n\t            });\n\t            return state.set('isComputing', true);\n\t        }\n\t\n\t        if (action.type === /* harmony namespace import */ __WEBPACK_IMPORTED_MODULE_1__actions__.END_COMPUTE) {\n\t            state = state.set('isComputing', false);\n\t            state = state.set('hasComputed', true);\n\t            return state.set('data', action.data);\n\t        }\n\t\n\t        return state;\n\t    };\n\t}\n\t\n\tfunction advanced(state, action) {\n\t    if (state === undefined) {\n\t        state = /* harmony import */__WEBPACK_IMPORTED_MODULE_0_immutable___default.a.Map({\n\t            ITERATIONS: 1000,\n\t            PEOPLE_IN_CAR: 2,\n\t            MAX_LENGTH: 20,\n\t            TRIM: false,\n\t            shown: false\n\t        });\n\t    }\n\t\n\t    if (action.type === /* harmony namespace import */ __WEBPACK_IMPORTED_MODULE_1__actions__.TOGGLE_ADVANCED) {\n\t        return state.set('shown', !state.get('shown'));\n\t    }\n\t\n\t    if (action.type === /* harmony namespace import */ __WEBPACK_IMPORTED_MODULE_1__actions__.CHANGE_ITERATIONS) {\n\t        return state.set('ITERATIONS', parseInt(action.iterations));\n\t    }\n\t\n\t    if (action.type === /* harmony namespace import */ __WEBPACK_IMPORTED_MODULE_1__actions__.CHANGE_MAX_LENGTH) {\n\t        return state.set('MAX_LENGTH', parseInt(action.maxLength));\n\t    }\n\t\n\t    if (action.type === /* harmony namespace import */ __WEBPACK_IMPORTED_MODULE_1__actions__.CHANGE_TRIM) {\n\t        return state.set('TRIM', action.trim === 'true');\n\t    }\n\t\n\t    return state;\n\t}\n\t\n\tfunction uniqueRides() {\n\t    var state = arguments.length <= 0 || arguments[0] === undefined ? 1 : arguments[0];\n\t    var action = arguments[1];\n\t\n\t    if (action.type === /* harmony namespace import */ __WEBPACK_IMPORTED_MODULE_1__actions__.CHANGE_UNIQUE_RIDES) {\n\t        return parseInt(action.uniqueRides);\n\t    }\n\t\n\t    return state;\n\t}\n\t\n\tfunction people() {\n\t    var state = arguments.length <= 0 || arguments[0] === undefined ? 1 : arguments[0];\n\t    var action = arguments[1];\n\t\n\t    if (action.type === /* harmony namespace import */ __WEBPACK_IMPORTED_MODULE_1__actions__.CHANGE_PEOPLE) {\n\t        return parseInt(action.people);\n\t    }\n\t\n\t    return state;\n\t}\n\t\n\tfunction makeReducer(worker) {\n\t    var results = makeResults(worker);\n\t\n\t    return function (state, action) {\n\t        if (state === undefined) {\n\t            state = /* harmony import */__WEBPACK_IMPORTED_MODULE_0_immutable___default.a.Map();\n\t        }\n\t\n\t        state = state.set('advanced', advanced(state.get('advanced'), action));\n\t        state = state.set('uniqueRides', uniqueRides(state.get('uniqueRides'), action));\n\t        state = state.set('people', people(state.get('people'), action));\n\t        state = state.set('results', results(state.get('results'), action, state));\n\t\n\t        return state;\n\t    };\n\t}\n\n/***/ },\n\n/***/ 206:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.e = function() {\n\t\treturn new Worker(__webpack_require__.p + \"309a186922b6dc66ba98.worker.js\");\n\t};\n\n/***/ },\n\n/***/ 207:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(44);\n\t/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __WEBPACK_IMPORTED_MODULE_0_react__ && __WEBPACK_IMPORTED_MODULE_0_react__.__esModule ? function() { return __WEBPACK_IMPORTED_MODULE_0_react__['default'] } : function() { return __WEBPACK_IMPORTED_MODULE_0_react__; }\n\t/* harmony import */ Object.defineProperty(__WEBPACK_IMPORTED_MODULE_0_react___default, 'a', { get: __WEBPACK_IMPORTED_MODULE_0_react___default });\n\t/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_dom__ = __webpack_require__(91);\n\t/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_dom___default = __WEBPACK_IMPORTED_MODULE_1_react_dom__ && __WEBPACK_IMPORTED_MODULE_1_react_dom__.__esModule ? function() { return __WEBPACK_IMPORTED_MODULE_1_react_dom__['default'] } : function() { return __WEBPACK_IMPORTED_MODULE_1_react_dom__; }\n\t/* harmony import */ Object.defineProperty(__WEBPACK_IMPORTED_MODULE_1_react_dom___default, 'a', { get: __WEBPACK_IMPORTED_MODULE_1_react_dom___default });\n\t/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_redux__ = __webpack_require__(69);\n\t/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_redux___default = __WEBPACK_IMPORTED_MODULE_2_redux__ && __WEBPACK_IMPORTED_MODULE_2_redux__.__esModule ? function() { return __WEBPACK_IMPORTED_MODULE_2_redux__['default'] } : function() { return __WEBPACK_IMPORTED_MODULE_2_redux__; }\n\t/* harmony import */ Object.defineProperty(__WEBPACK_IMPORTED_MODULE_2_redux___default, 'a', { get: __WEBPACK_IMPORTED_MODULE_2_redux___default });\n\t/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_redux__ = __webpack_require__(92);\n\t/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_redux___default = __WEBPACK_IMPORTED_MODULE_3_react_redux__ && __WEBPACK_IMPORTED_MODULE_3_react_redux__.__esModule ? function() { return __WEBPACK_IMPORTED_MODULE_3_react_redux__['default'] } : function() { return __WEBPACK_IMPORTED_MODULE_3_react_redux__; }\n\t/* harmony import */ Object.defineProperty(__WEBPACK_IMPORTED_MODULE_3_react_redux___default, 'a', { get: __WEBPACK_IMPORTED_MODULE_3_react_redux___default });\n\t/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__actions__ = __webpack_require__(136);\n\t/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__graph__ = __webpack_require__(202);\n\t/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__reducer__ = __webpack_require__(203);\n\t/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_worker_worker__ = __webpack_require__(206);\n\t/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_worker_worker___default = __WEBPACK_IMPORTED_MODULE_7_worker_worker__ && __WEBPACK_IMPORTED_MODULE_7_worker_worker__.__esModule ? function() { return __WEBPACK_IMPORTED_MODULE_7_worker_worker__['default'] } : function() { return __WEBPACK_IMPORTED_MODULE_7_worker_worker__; }\n\t/* harmony import */ Object.defineProperty(__WEBPACK_IMPORTED_MODULE_7_worker_worker___default, 'a', { get: __WEBPACK_IMPORTED_MODULE_7_worker_worker___default });\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\tvar SimcoUnconnected = function (_React$Component) {\n\t    _inherits(SimcoUnconnected, _React$Component);\n\t\n\t    function SimcoUnconnected() {\n\t        _classCallCheck(this, SimcoUnconnected);\n\t\n\t        return _possibleConstructorReturn(this, Object.getPrototypeOf(SimcoUnconnected).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(SimcoUnconnected, [{\n\t        key: 'render',\n\t        value: function render() {\n\t            var _this2 = this;\n\t\n\t            return /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n\t                'div',\n\t                { style: { width: '80%', margin: 'auto' } },\n\t                /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n\t                    'div',\n\t                    { style: { display: 'flex', flexDirection: 'row', maxWidth: '600px', margin: 'auto' } },\n\t                    /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n\t                        'div',\n\t                        { style: { flex: 1, padding: '5px' } },\n\t                        /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n\t                            'label',\n\t                            { style: { display: 'block', marginBottom: '5px' } },\n\t                            'Trajet(s) unique(s)'\n\t                        ),\n\t                        /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {\n\t                            min: '1',\n\t                            onChange: function onChange(e) {\n\t                                _this2.props.dispatch({\n\t                                    type: /* harmony namespace import */ __WEBPACK_IMPORTED_MODULE_4__actions__.CHANGE_UNIQUE_RIDES,\n\t                                    uniqueRides: e.target.value\n\t                                });\n\t                            },\n\t                            style: { width: '100%' },\n\t                            type: 'number',\n\t                            step: '1',\n\t                            value: this.props.uniqueRides\n\t                        })\n\t                    ),\n\t                    /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n\t                        'div',\n\t                        { style: { flex: 1, padding: '5px' } },\n\t                        /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n\t                            'label',\n\t                            { style: { display: 'block', marginBottom: '5px' } },\n\t                            'Voyageur(s)'\n\t                        ),\n\t                        /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {\n\t                            min: '1',\n\t                            onChange: function onChange(e) {\n\t                                _this2.props.dispatch({\n\t                                    type: /* harmony namespace import */ __WEBPACK_IMPORTED_MODULE_4__actions__.CHANGE_PEOPLE,\n\t                                    people: e.target.value\n\t                                });\n\t                            },\n\t                            style: { width: '100%' },\n\t                            type: 'number',\n\t                            step: '1',\n\t                            value: this.props.people\n\t                        })\n\t                    ),\n\t                    /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n\t                        'div',\n\t                        { style: { flex: 1, padding: '5px', display: 'flex', alignItems: 'flex-end' } },\n\t                        /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n\t                            'button',\n\t                            {\n\t                                disabled: this.props.results.get('isComputing'),\n\t                                onClick: function onClick() {\n\t                                    _this2.props.dispatch({ type: /* harmony namespace import */ __WEBPACK_IMPORTED_MODULE_4__actions__.START_COMPUTE });\n\t                                },\n\t                                style: { height: '37px', width: '100%' }\n\t                            },\n\t                            'Calculer'\n\t                        )\n\t                    )\n\t                ),\n\t                /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n\t                    'div',\n\t                    { style: { maxWidth: '600px', margin: 'auto' } },\n\t                    /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n\t                        'p',\n\t                        { style: { paddingRight: '5px', margin: 0, textAlign: 'right', fontSize: '0.8em' } },\n\t                        /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n\t                            'a',\n\t                            { href: '#', onClick: function onClick(e) {\n\t                                    e.preventDefault();_this2.props.dispatch({ type: /* harmony namespace import */ __WEBPACK_IMPORTED_MODULE_4__actions__.TOGGLE_ADVANCED });\n\t                                } },\n\t                            'Réglages avancés'\n\t                        )\n\t                    ),\n\t                    this.props.advanced.get('shown') ? /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n\t                        'div',\n\t                        { style: { display: 'flex', flexDirection: 'row', fontSize: '0.8em' } },\n\t                        /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div', { style: { flex: 2 } }),\n\t                        /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n\t                            'div',\n\t                            { style: { flex: 1, padding: '5px' } },\n\t                            /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n\t                                'label',\n\t                                { style: { display: 'block', marginBottom: '5px' } },\n\t                                'Passes'\n\t                            ),\n\t                            /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {\n\t                                onChange: function onChange(e) {\n\t                                    _this2.props.dispatch({\n\t                                        type: /* harmony namespace import */ __WEBPACK_IMPORTED_MODULE_4__actions__.CHANGE_ITERATIONS,\n\t                                        iterations: e.target.value\n\t                                    });\n\t                                },\n\t                                style: { width: '100%' },\n\t                                type: 'number',\n\t                                value: this.props.advanced.get('ITERATIONS')\n\t                            })\n\t                        ),\n\t                        /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n\t                            'div',\n\t                            { style: { flex: 1, padding: '5px' } },\n\t                            /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n\t                                'label',\n\t                                { style: { display: 'block', marginBottom: '5px' } },\n\t                                'Max groupes'\n\t                            ),\n\t                            /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {\n\t                                max: '30',\n\t                                min: '2',\n\t                                onChange: function onChange(e) {\n\t                                    _this2.props.dispatch({\n\t                                        type: /* harmony namespace import */ __WEBPACK_IMPORTED_MODULE_4__actions__.CHANGE_MAX_LENGTH,\n\t                                        maxLength: e.target.value\n\t                                    });\n\t                                },\n\t                                style: { width: '100%' },\n\t                                type: 'number',\n\t                                step: '1',\n\t                                value: this.props.advanced.get('MAX_LENGTH')\n\t                            })\n\t                        ),\n\t                        /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n\t                            'div',\n\t                            { style: { flex: 1, padding: '5px' } },\n\t                            /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n\t                                'label',\n\t                                { style: { display: 'block', marginBottom: '5px' } },\n\t                                'Trim'\n\t                            ),\n\t                            /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n\t                                'select',\n\t                                {\n\t                                    onChange: function onChange(e) {\n\t                                        _this2.props.dispatch({\n\t                                            type: /* harmony namespace import */ __WEBPACK_IMPORTED_MODULE_4__actions__.CHANGE_TRIM,\n\t                                            trim: e.target.value\n\t                                        });\n\t                                    },\n\t                                    style: { height: '29px' },\n\t                                    value: this.props.advanced.get('TRIM') ? 'true' : 'false'\n\t                                },\n\t                                /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n\t                                    'option',\n\t                                    { value: 'false' },\n\t                                    'Sans'\n\t                                ),\n\t                                /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n\t                                    'option',\n\t                                    { value: 'true' },\n\t                                    'Avec'\n\t                                )\n\t                            )\n\t                        )\n\t                    ) : null\n\t                ),\n\t                this.props.results.get('hasComputed') ? /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(/* harmony import */__WEBPACK_IMPORTED_MODULE_5__graph__[\"a\"], { results: this.props.results }) : null\n\t            );\n\t        }\n\t    }]);\n\t\n\t    return SimcoUnconnected;\n\t}(/* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);\n\t\n\tvar select = function select(state) {\n\t    return {\n\t        advanced: state.get('advanced'),\n\t        uniqueRides: state.get('uniqueRides'),\n\t        people: state.get('people'),\n\t        results: state.get('results')\n\t    };\n\t};\n\t\n\tvar Simco = /* harmony import */__WEBPACK_IMPORTED_MODULE_3_react_redux__[\"connect\"].bind()(select)(SimcoUnconnected);\n\t\n\tfunction mountSimcoApp(options) {\n\t    var worker = new /* harmony import */__WEBPACK_IMPORTED_MODULE_7_worker_worker___default.a();\n\t\n\t    var store = /* harmony import */__WEBPACK_IMPORTED_MODULE_2_redux__[\"createStore\"].bind()(/* harmony import */__WEBPACK_IMPORTED_MODULE_6__reducer__[\"a\"].bind()(worker));\n\t\n\t    worker.onmessage = function (event) {\n\t        store.dispatch({\n\t            type: /* harmony namespace import */ __WEBPACK_IMPORTED_MODULE_4__actions__.END_COMPUTE,\n\t            data: event.data.formattedFrequencies\n\t        });\n\t    };\n\t\n\t    /* harmony import */__WEBPACK_IMPORTED_MODULE_1_react_dom___default.a.render(/* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n\t        /* harmony import */__WEBPACK_IMPORTED_MODULE_3_react_redux__[\"Provider\"],\n\t        { store: store },\n\t        /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(Simco, null)\n\t    ), options.node);\n\t}\n\t\n\twindow.mountSimcoApp = mountSimcoApp;\n\n/***/ },\n\n/***/ 387:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var d3 = {\n\t    version: \"3.5.16\"\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = this.document;\n\t  function d3_documentElement(node) {\n\t    return node && (node.ownerDocument || node.document || node).documentElement;\n\t  }\n\t  function d3_window(node) {\n\t    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n\t  }\n\t  if (d3_document) {\n\t    try {\n\t      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n\t    } catch (e) {\n\t      d3_array = function(list) {\n\t        var i = list.length, array = new Array(i);\n\t        while (i--) array[i] = list[i];\n\t        return array;\n\t      };\n\t    }\n\t  }\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  if (d3_document) {\n\t    try {\n\t      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n\t    } catch (error) {\n\t      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t      d3_element_prototype.setAttribute = function(name, value) {\n\t        d3_element_setAttribute.call(this, name, value + \"\");\n\t      };\n\t      d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t      };\n\t      d3_style_prototype.setProperty = function(name, value, priority) {\n\t        d3_style_setProperty.call(this, name, value + \"\", priority);\n\t      };\n\t    }\n\t  }\n\t  d3.ascending = d3_ascending;\n\t  function d3_ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  function d3_number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t  function d3_numeric(x) {\n\t    return !isNaN(x);\n\t  }\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  d3.mean = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1, j = n;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n\t    }\n\t    if (j) return s / j;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    var numbers = [], n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n\t    }\n\t    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n\t  };\n\t  d3.variance = function(array, f) {\n\t    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t  d3.deviation = function() {\n\t    var v = d3.variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t  function d3_bisector(compare) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t  var d3_bisect = d3_bisector(d3_ascending);\n\t  d3.bisectLeft = d3_bisect.left;\n\t  d3.bisect = d3.bisectRight = d3_bisect.right;\n\t  d3.bisector = function(f) {\n\t    return d3_bisector(f.length === 1 ? function(d, x) {\n\t      return d3_ascending(f(d), x);\n\t    } : f);\n\t  };\n\t  d3.shuffle = function(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t    var m = i1 - i0, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.transpose = function(matrix) {\n\t    if (!(n = matrix.length)) return [];\n\t    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n\t        row[j] = matrix[j][i];\n\t      }\n\t    }\n\t    return transpose;\n\t  };\n\t  function d3_transposeLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.zip = function() {\n\t    return d3.transpose(arguments);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    for (var key in properties) {\n\t      Object.defineProperty(ctor.prototype, key, {\n\t        value: properties[key],\n\t        enumerable: false\n\t      });\n\t    }\n\t  }\n\t  d3.map = function(object, f) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) {\n\t      object.forEach(function(key, value) {\n\t        map.set(key, value);\n\t      });\n\t    } else if (Array.isArray(object)) {\n\t      var i = -1, n = object.length, o;\n\t      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n\t    } else {\n\t      for (var key in object) map.set(key, object[key]);\n\t    }\n\t    return map;\n\t  };\n\t  function d3_Map() {\n\t    this._ = Object.create(null);\n\t  }\n\t  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n\t  d3_class(d3_Map, {\n\t    has: d3_map_has,\n\t    get: function(key) {\n\t      return this._[d3_map_escape(key)];\n\t    },\n\t    set: function(key, value) {\n\t      return this._[d3_map_escape(key)] = value;\n\t    },\n\t    remove: d3_map_remove,\n\t    keys: d3_map_keys,\n\t    values: function() {\n\t      var values = [];\n\t      for (var key in this._) values.push(this._[key]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var key in this._) entries.push({\n\t        key: d3_map_unescape(key),\n\t        value: this._[key]\n\t      });\n\t      return entries;\n\t    },\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n\t    }\n\t  });\n\t  function d3_map_escape(key) {\n\t    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n\t  }\n\t  function d3_map_unescape(key) {\n\t    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n\t  }\n\t  function d3_map_has(key) {\n\t    return d3_map_escape(key) in this._;\n\t  }\n\t  function d3_map_remove(key) {\n\t    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n\t  }\n\t  function d3_map_keys() {\n\t    var keys = [];\n\t    for (var key in this._) keys.push(d3_map_unescape(key));\n\t    return keys;\n\t  }\n\t  function d3_map_size() {\n\t    var size = 0;\n\t    for (var key in this._) ++size;\n\t    return size;\n\t  }\n\t  function d3_map_empty() {\n\t    for (var key in this._) return false;\n\t    return true;\n\t  }\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {\n\t    this._ = Object.create(null);\n\t  }\n\t  d3_class(d3_Set, {\n\t    has: d3_map_has,\n\t    add: function(key) {\n\t      this._[d3_map_escape(key += \"\")] = true;\n\t      return key;\n\t    },\n\t    remove: d3_map_remove,\n\t    values: d3_map_keys,\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key));\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.slice(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.slice(i + 1);\n\t      type = type.slice(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatches = function(n, s) {\n\t    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\t    d3_selectMatches = function(n, s) {\n\t      return d3_selectMatcher.call(n, s);\n\t    };\n\t    return d3_selectMatches(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = Sizzle;\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3.select(d3_document.documentElement);\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: d3_nsXhtml,\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) {\n\t        var node = this.node();\n\t        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n\t      }\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    function create() {\n\t      var document = this.ownerDocument, namespace = this.namespaceURI;\n\t      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n\t    }\n\t    function createNS() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    }\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(d3_selectionRemove);\n\t  };\n\t  function d3_selectionRemove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          if (node = group[i]) {\n\t            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n\t              exitNodes[i] = node;\n\t            } else {\n\t              nodeByKeyValue.set(keyValue, node);\n\t            }\n\t            keyValues[i] = keyValue;\n\t          }\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          } else if (node !== true) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          }\n\t          nodeByKeyValue.set(keyValue, true);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3_ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    d3_selection_each(this, function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3.select = function(node) {\n\t    var group;\n\t    if (typeof node === \"string\") {\n\t      group = [ d3_select(node, d3_document) ];\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = [ node ];\n\t      group.parentNode = d3_documentElement(node);\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group;\n\t    if (typeof nodes === \"string\") {\n\t      group = d3_array(d3_selectAll(nodes, d3_document));\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = d3_array(nodes);\n\t      group.parentNode = null;\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.slice(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  if (d3_document) {\n\t    d3_selection_onFilters.forEach(function(k) {\n\t      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t    });\n\t  }\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect, d3_event_dragId = 0;\n\t  function d3_event_dragSuppress(node) {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect == null) {\n\t      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n\t    }\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        var off = function() {\n\t          w.on(click, null);\n\t        };\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0) {\n\t        var window = d3_window(container);\n\t        if (window.scrollX || window.scrollY) {\n\t          svg = d3.select(\"body\").append(\"svg\").style({\n\t            position: \"absolute\",\n\t            top: 0,\n\t            left: 0,\n\t            margin: 0,\n\t            padding: 0,\n\t            border: \"none\"\n\t          }, \"important\");\n\t          var ctm = svg[0][0].getScreenCTM();\n\t          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t          svg.remove();\n\t        }\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touch = function(container, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n\t    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return d3_mousePoint(container, touch);\n\t      }\n\t    }\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function dragstart(id, position, subject, move, end) {\n\t      return function() {\n\t        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n\t        if (origin) {\n\t          dragOffset = origin.apply(that, arguments);\n\t          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n\t        } else {\n\t          dragOffset = [ 0, 0 ];\n\t        }\n\t        dispatch({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var position1 = position(parent, dragId), dx, dy;\n\t          if (!position1) return;\n\t          dx = position1[0] - position0[0];\n\t          dy = position1[1] - position0[1];\n\t          dragged |= dx | dy;\n\t          position0 = position1;\n\t          dispatch({\n\t            type: \"drag\",\n\t            x: position1[0] + dragOffset[0],\n\t            y: position1[1] + dragOffset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          if (!position(parent, dragId)) return;\n\t          dragSubject.on(move + dragName, null).on(end + dragName, null);\n\t          dragRestore(dragged);\n\t          dispatch({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  function d3_behavior_dragTouchId() {\n\t    return d3.event.changedTouches[0].identifier;\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_cross2d(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n\t    if (d2 < ε2) {\n\t      S = Math.log(w1 / w0) / ρ;\n\t      i = function(t) {\n\t        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n\t      };\n\t    } else {\n\t      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t      S = (r1 - r0) / ρ;\n\t      i = function(t) {\n\t        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      };\n\t    }\n\t    i.duration = S * 1e3;\n\t    return i;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    if (!d3_behavior_zoomWheel) {\n\t      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return d3.event.wheelDelta;\n\t      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.detail;\n\t      }, \"MozMousePixelScroll\");\n\t    }\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var dispatch = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(dispatch);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(dispatch);\n\t            };\n\t          }).each(\"interrupt.zoom\", function() {\n\t            zoomended(dispatch);\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(dispatch);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(dispatch);\n\t          zoomed(dispatch);\n\t          zoomended(dispatch);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: null\n\t      };\n\t      scaleTo(+_);\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.duration = function(_) {\n\t      if (!arguments.length) return duration;\n\t      duration = +_;\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function zoomTo(that, p, l, k) {\n\t      that.__chart__ = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: view.k\n\t      };\n\t      scaleTo(Math.pow(2, k));\n\t      translateTo(center0 = p, l);\n\t      that = d3.select(that);\n\t      if (duration > 0) that = that.transition().duration(duration);\n\t      that.call(zoom.event);\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(dispatch) {\n\t      if (!zooming++) dispatch({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(dispatch) {\n\t      rescale();\n\t      dispatch({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(dispatch) {\n\t      if (!--zooming) dispatch({\n\t        type: \"zoomend\"\n\t      }), center0 = null;\n\t    }\n\t    function mousedowned() {\n\t      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n\t      d3_selection_interrupt.call(that);\n\t      zoomstarted(dispatch);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(that), location0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        subject.on(mousemove, null).on(mouseup, null);\n\t        dragRestore(dragged);\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n\t      started();\n\t      zoomstarted(dispatch);\n\t      subject.on(mousedown, null).on(touchstart, started);\n\t      function relocate() {\n\t        var touches = d3.touches(that);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var target = d3.event.target;\n\t        d3.select(target).on(touchmove, moved).on(touchend, ended);\n\t        targets.push(target);\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0];\n\t            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n\t            d3_eventPreventDefault();\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(that), p0, l0, p1, l1;\n\t        d3_selection_interrupt.call(that);\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        d3.selectAll(targets).on(zoomName, null);\n\t        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var dispatch = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n\t      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(dispatch);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(center0, translate0);\n\t      zoomed(dispatch);\n\t    }\n\t    function dblclicked() {\n\t      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n\t      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n\t  d3.color = d3_color;\n\t  function d3_color() {}\n\t  d3_color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = d3_hsl;\n\t  function d3_hsl(h, s, l) {\n\t    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n\t  }\n\t  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = d3_hcl;\n\t  function d3_hcl(h, c, l) {\n\t    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n\t  }\n\t  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = d3_lab;\n\t  function d3_lab(l, a, b) {\n\t    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = d3_rgb;\n\t  function d3_rgb(r, g, b) {\n\t    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n\t  }\n\t  function d3_rgbNumber(value) {\n\t    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return new d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    var r = 0, g = 0, b = 0, m1, m2, color;\n\t    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (color = d3_rgb_names.get(format)) {\n\t      return rgb(color.r, color.g, color.b);\n\t    }\n\t    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n\t      if (format.length === 4) {\n\t        r = (color & 3840) >> 4;\n\t        r = r >> 4 | r;\n\t        g = color & 240;\n\t        g = g >> 4 | g;\n\t        b = color & 15;\n\t        b = b << 4 | b;\n\t      } else if (format.length === 7) {\n\t        r = (color & 16711680) >> 16;\n\t        g = (color & 65280) >> 8;\n\t        b = color & 255;\n\t      }\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    rebeccapurple: 6697881,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  function d3_xhrHasResponse(request) {\n\t    var type = request.responseType;\n\t    return type && type !== \"text\" ? request.response : request.responseText;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t        return text.slice(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function() {\n\t    d3_timer.apply(this, arguments);\n\t  };\n\t  function d3_timer(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t    return timer;\n\t  }\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now(), timer = d3_timer_queueHead;\n\t    while (timer) {\n\t      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n\t      timer = timer.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.c) {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      } else {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value = +value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  function d3_locale_numberFormat(locale) {\n\t    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n\t      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n\t      }\n\t      return t.reverse().join(locale_thousands);\n\t    } : d3_identity;\n\t    return function(specifier) {\n\t      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n\t      if (precision) precision = +precision.substring(1);\n\t      if (zfill || fill === \"0\" && align === \"=\") {\n\t        zfill = fill = \"0\";\n\t        align = \"=\";\n\t      }\n\t      switch (type) {\n\t       case \"n\":\n\t        comma = true;\n\t        type = \"g\";\n\t        break;\n\t\n\t       case \"%\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"f\";\n\t        break;\n\t\n\t       case \"p\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"r\";\n\t        break;\n\t\n\t       case \"b\":\n\t       case \"o\":\n\t       case \"x\":\n\t       case \"X\":\n\t        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\t\n\t       case \"c\":\n\t        exponent = false;\n\t\n\t       case \"d\":\n\t        integer = true;\n\t        precision = 0;\n\t        break;\n\t\n\t       case \"s\":\n\t        scale = -1;\n\t        type = \"r\";\n\t        break;\n\t      }\n\t      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n\t      if (type == \"r\" && !precision) type = \"g\";\n\t      if (precision != null) {\n\t        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t      }\n\t      type = d3_format_types.get(type) || d3_format_typeDefault;\n\t      var zcomma = zfill && comma;\n\t      return function(value) {\n\t        var fullSuffix = suffix;\n\t        if (integer && value % 1) return \"\";\n\t        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\t        if (scale < 0) {\n\t          var unit = d3.formatPrefix(value, precision);\n\t          value = unit.scale(value);\n\t          fullSuffix = unit.symbol + suffix;\n\t        } else {\n\t          value *= scale;\n\t        }\n\t        value = type(value, precision);\n\t        var i = value.lastIndexOf(\".\"), before, after;\n\t        if (i < 0) {\n\t          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n\t          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n\t        } else {\n\t          before = value.substring(0, i);\n\t          after = locale_decimal + value.substring(i + 1);\n\t        }\n\t        if (!zfill && comma) before = formatGroup(before, Infinity);\n\t        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n\t        negative += prefix;\n\t        value = before + after;\n\t        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n\t      };\n\t    };\n\t  }\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_time = d3.time = {}, d3_date = Date;\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  function d3_locale_timeFormat(locale) {\n\t    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\t    function d3_time_format(template) {\n\t      var n = template.length;\n\t      function format(date) {\n\t        var string = [], i = -1, j = 0, c, p, f;\n\t        while (++i < n) {\n\t          if (template.charCodeAt(i) === 37) {\n\t            string.push(template.slice(j, i));\n\t            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t        string.push(template.slice(j, i));\n\t        return string.join(\"\");\n\t      }\n\t      format.parse = function(string) {\n\t        var d = {\n\t          y: 1900,\n\t          m: 0,\n\t          d: 1,\n\t          H: 0,\n\t          M: 0,\n\t          S: 0,\n\t          L: 0,\n\t          Z: null\n\t        }, i = d3_time_parse(d, template, string, 0);\n\t        if (i != string.length) return null;\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n\t          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t          date.setFullYear(d.y, 0, 1);\n\t          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t        } else date.setFullYear(d.y, d.m, d.d);\n\t        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n\t        return localZ ? date._ : date;\n\t      };\n\t      format.toString = function() {\n\t        return template;\n\t      };\n\t      return format;\n\t    }\n\t    function d3_time_parse(date, template, string, j) {\n\t      var c, p, t, i = 0, n = template.length, m = string.length;\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = template.charCodeAt(i++);\n\t        if (c === 37) {\n\t          t = template.charAt(i++);\n\t          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t          if (!p || (j = p(date, string, j)) < 0) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t      return j;\n\t    }\n\t    d3_time_format.utc = function(template) {\n\t      var local = d3_time_format(template);\n\t      function format(date) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var utc = new d3_date();\n\t          utc._ = date;\n\t          return local(utc);\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      }\n\t      format.parse = function(string) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var date = local.parse(string);\n\t          return date && date._;\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      };\n\t      format.toString = local.toString;\n\t      return format;\n\t    };\n\t    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n\t    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n\t    locale_periods.forEach(function(p, i) {\n\t      d3_time_periodLookup.set(p.toLowerCase(), i);\n\t    });\n\t    var d3_time_formats = {\n\t      a: function(d) {\n\t        return locale_shortDays[d.getDay()];\n\t      },\n\t      A: function(d) {\n\t        return locale_days[d.getDay()];\n\t      },\n\t      b: function(d) {\n\t        return locale_shortMonths[d.getMonth()];\n\t      },\n\t      B: function(d) {\n\t        return locale_months[d.getMonth()];\n\t      },\n\t      c: d3_time_format(locale_dateTime),\n\t      d: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      e: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      H: function(d, p) {\n\t        return d3_time_formatPad(d.getHours(), p, 2);\n\t      },\n\t      I: function(d, p) {\n\t        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t      },\n\t      j: function(d, p) {\n\t        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t      },\n\t      L: function(d, p) {\n\t        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t      },\n\t      m: function(d, p) {\n\t        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t      },\n\t      M: function(d, p) {\n\t        return d3_time_formatPad(d.getMinutes(), p, 2);\n\t      },\n\t      p: function(d) {\n\t        return locale_periods[+(d.getHours() >= 12)];\n\t      },\n\t      S: function(d, p) {\n\t        return d3_time_formatPad(d.getSeconds(), p, 2);\n\t      },\n\t      U: function(d, p) {\n\t        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t      },\n\t      w: function(d) {\n\t        return d.getDay();\n\t      },\n\t      W: function(d, p) {\n\t        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t      },\n\t      x: d3_time_format(locale_date),\n\t      X: d3_time_format(locale_time),\n\t      y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t      },\n\t      Y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t      },\n\t      Z: d3_time_zone,\n\t      \"%\": function() {\n\t        return \"%\";\n\t      }\n\t    };\n\t    var d3_time_parsers = {\n\t      a: d3_time_parseWeekdayAbbrev,\n\t      A: d3_time_parseWeekday,\n\t      b: d3_time_parseMonthAbbrev,\n\t      B: d3_time_parseMonth,\n\t      c: d3_time_parseLocaleFull,\n\t      d: d3_time_parseDay,\n\t      e: d3_time_parseDay,\n\t      H: d3_time_parseHour24,\n\t      I: d3_time_parseHour24,\n\t      j: d3_time_parseDayOfYear,\n\t      L: d3_time_parseMilliseconds,\n\t      m: d3_time_parseMonthNumber,\n\t      M: d3_time_parseMinutes,\n\t      p: d3_time_parseAmPm,\n\t      S: d3_time_parseSeconds,\n\t      U: d3_time_parseWeekNumberSunday,\n\t      w: d3_time_parseWeekdayNumber,\n\t      W: d3_time_parseWeekNumberMonday,\n\t      x: d3_time_parseLocaleDate,\n\t      X: d3_time_parseLocaleTime,\n\t      y: d3_time_parseYear,\n\t      Y: d3_time_parseFullYear,\n\t      Z: d3_time_parseZone,\n\t      \"%\": d3_time_parseLiteralPercent\n\t    };\n\t    function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t      d3_time_dayAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseWeekday(date, string, i) {\n\t      d3_time_dayRe.lastIndex = 0;\n\t      var n = d3_time_dayRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonthAbbrev(date, string, i) {\n\t      d3_time_monthAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonth(date, string, i) {\n\t      d3_time_monthRe.lastIndex = 0;\n\t      var n = d3_time_monthRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseLocaleFull(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleDate(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleTime(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t    }\n\t    function d3_time_parseAmPm(date, string, i) {\n\t      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n\t      return n == null ? -1 : (date.p = n, i);\n\t    }\n\t    return d3_time_format;\n\t  }\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  function d3_time_formatMulti(formats) {\n\t    var n = formats.length, i = -1;\n\t    while (++i < n) formats[i][0] = this(formats[i][0]);\n\t    return function(date) {\n\t      var i = 0, f = formats[i];\n\t      while (!f[1](date)) f = formats[++i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  d3.locale = function(locale) {\n\t    return {\n\t      numberFormat: d3_locale_numberFormat(locale),\n\t      timeFormat: d3_locale_timeFormat(locale)\n\t    };\n\t  };\n\t  var d3_locale_enUS = d3.locale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [ 3 ],\n\t    currency: [ \"$\", \"\" ],\n\t    dateTime: \"%a %b %e %X %Y\",\n\t    date: \"%m/%d/%Y\",\n\t    time: \"%H:%M:%S\",\n\t    periods: [ \"AM\", \"PM\" ],\n\t    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n\t    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n\t    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n\t  });\n\t  d3.format = d3_locale_enUS.numberFormat;\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          if (n > 0) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t            listener.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n\t        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      if (F > 0) {\n\t        if (φ < -halfπ + ε) φ = -halfπ + ε;\n\t      } else {\n\t        if (φ > halfπ - ε) φ = halfπ - ε;\n\t      }\n\t      var ρ = F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return rotate([ 0, 0, 90 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n\t      for (i = 0; i < n; i++) {\n\t        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n\t      }\n\t      points.sort(d3_geom_hullOrder);\n\t      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n\t      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n\t      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n\t      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n\t      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n\t      return polygon;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullUpper(points) {\n\t    var n = points.length, hull = [ 0, 1 ], hs = 2;\n\t    for (var i = 2; i < n; i++) {\n\t      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n\t      hull[hs++] = i;\n\t    }\n\t    return hull.slice(0, hs);\n\t  }\n\t  function d3_geom_hullOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = xm; else x2 = xm;\n\t        if (below) y1 = ym; else y2 = ym;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      root.find = function(point) {\n\t        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n\t    var minDistance2 = Infinity, closestPoint;\n\t    (function find(node, x1, y1, x2, y2) {\n\t      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\t      if (point = node.point) {\n\t        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n\t        if (distance2 < minDistance2) {\n\t          var distance = Math.sqrt(minDistance2 = distance2);\n\t          x0 = x - distance, y0 = y - distance;\n\t          x3 = x + distance, y3 = y + distance;\n\t          closestPoint = point;\n\t        }\n\t      }\n\t      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n\t      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n\t        if (node = children[i & 3]) switch (i & 3) {\n\t         case 0:\n\t          find(node, x1, y1, xm, ym);\n\t          break;\n\t\n\t         case 1:\n\t          find(node, xm, y1, x2, ym);\n\t          break;\n\t\n\t         case 2:\n\t          find(node, x1, ym, xm, y2);\n\t          break;\n\t\n\t         case 3:\n\t          find(node, xm, ym, x2, y2);\n\t          break;\n\t        }\n\t      }\n\t    })(root, x0, y0, x3, y3);\n\t    return closestPoint;\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    a = +a, b = +b;\n\t    return function(t) {\n\t      return a * (1 - t) + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n\t    a = a + \"\", b = b + \"\";\n\t    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n\t      if ((bs = bm.index) > bi) {\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) {\n\t        if (s[i]) s[i] += bm; else s[++i] = bm;\n\t      } else {\n\t        s[++i] = null;\n\t        q.push({\n\t          i: i,\n\t          x: d3_interpolateNumber(am, bm)\n\t        });\n\t      }\n\t      bi = d3_interpolate_numberB.lastIndex;\n\t    }\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; else s[++i] = bs;\n\t    }\n\t    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n\t      return b(t) + \"\";\n\t    }) : function() {\n\t      return b;\n\t    } : (b = q.length, function(t) {\n\t      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    });\n\t  }\n\t  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransformPop(s) {\n\t    return s.length ? s.pop() + \",\" : \"\";\n\t  }\n\t  function d3_interpolateTranslate(ta, tb, s, q) {\n\t    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n\t      var i = s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateRotate(ra, rb, s, q) {\n\t    if (ra !== rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateSkew(wa, wb, s, q) {\n\t    if (wa !== wb) {\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateScale(ka, kb, s, q) {\n\t    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n\t      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] !== 1 || kb[1] !== 1) {\n\t      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [];\n\t    a = d3.transform(a), b = d3.transform(b);\n\t    d3_interpolateTranslate(a.translate, b.translate, s, q);\n\t    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n\t    d3_interpolateSkew(a.skew, b.skew, s, q);\n\t    d3_interpolateScale(a.scale, b.scale, s, q);\n\t    a = b = null;\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return (x - a) / b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) / b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: groupSums[di]\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n\t          if (dw * dw / theta2 < dn) {\n\t            if (dn < chargeDistance2) {\n\t              var k = quad.charge / dn;\n\t              node.px -= dx * k;\n\t              node.py -= dy * k;\n\t            }\n\t            return true;\n\t          }\n\t          if (quad.point && dn && dn < chargeDistance2) {\n\t            var k = quad.pointCharge / dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        timer = null;\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.chargeDistance = function(x) {\n\t      if (!arguments.length) return Math.sqrt(chargeDistance2);\n\t      chargeDistance2 = x * x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return Math.sqrt(theta2);\n\t      theta2 = x * x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) {\n\t          alpha = x;\n\t        } else {\n\t          timer.c = null, timer.t = NaN, timer = null;\n\t          event.end({\n\t            type: \"end\",\n\t            alpha: alpha = 0\n\t          });\n\t        }\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        timer = d3_timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n\t        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function hierarchy(root) {\n\t      var stack = [ root ], nodes = [], node;\n\t      root.depth = 0;\n\t      while ((node = stack.pop()) != null) {\n\t        nodes.push(node);\n\t        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n\t          var n, childs, child;\n\t          while (--n >= 0) {\n\t            stack.push(child = childs[n]);\n\t            child.parent = node;\n\t            child.depth = node.depth + 1;\n\t          }\n\t          if (value) node.value = 0;\n\t          node.children = childs;\n\t        } else {\n\t          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          delete node.children;\n\t        }\n\t      }\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var childs, parent;\n\t        if (sort && (childs = node.children)) childs.sort(sort);\n\t        if (value && (parent = node.parent)) parent.value += node.value;\n\t      });\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      if (value) {\n\t        d3_layout_hierarchyVisitBefore(root, function(node) {\n\t          if (node.children) node.value = 0;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, function(node) {\n\t          var parent;\n\t          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          if (parent = node.parent) parent.value += node.value;\n\t        });\n\t      }\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyVisitBefore(node, callback) {\n\t    var nodes = [ node ];\n\t    while ((node = nodes.pop()) != null) {\n\t      callback(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var n, children;\n\t        while (--n >= 0) nodes.push(children[n]);\n\t      }\n\t    }\n\t  }\n\t  function d3_layout_hierarchyVisitAfter(node, callback) {\n\t    var nodes = [ node ], nodes2 = [];\n\t    while ((node = nodes.pop()) != null) {\n\t      nodes2.push(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var i = -1, n, children;\n\t        while (++i < n) nodes.push(children[i]);\n\t      }\n\t    }\n\t    while ((node = nodes2.pop()) != null) {\n\t      callback(node);\n\t    }\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n\t    function pie(data) {\n\t      var n = data.length, values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      index.forEach(function(i) {\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: v = values[i],\n\t          startAngle: a,\n\t          endAngle: a += v * k + pa,\n\t          padAngle: p\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(_) {\n\t      if (!arguments.length) return value;\n\t      value = _;\n\t      return pie;\n\t    };\n\t    pie.sort = function(_) {\n\t      if (!arguments.length) return sort;\n\t      sort = _;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(_) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = _;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(_) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = _;\n\t      return pie;\n\t    };\n\t    pie.padAngle = function(_) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = _;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      if (!(n = data.length)) return data;\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var m = series[0].length, n, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n\t      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n\t      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n\t      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n\t        var left = root0, right = root0, bottom = root0;\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t      return nodes;\n\t    }\n\t    function wrapTree(root0) {\n\t      var root1 = {\n\t        A: null,\n\t        children: [ root0 ]\n\t      }, queue = [ root1 ], node1;\n\t      while ((node1 = queue.pop()) != null) {\n\t        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n\t          queue.push((children[i] = child = {\n\t            _: children[i],\n\t            parent: node1,\n\t            children: (child = children[i].children) && child.slice() || [],\n\t            A: null,\n\t            a: null,\n\t            z: 0,\n\t            m: 0,\n\t            c: 0,\n\t            s: 0,\n\t            t: null,\n\t            i: i\n\t          }).a = child);\n\t        }\n\t      }\n\t      return root1.children[0];\n\t    }\n\t    function firstWalk(v) {\n\t      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n\t      if (children.length) {\n\t        d3_layout_treeShift(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n\t        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t          vom = d3_layout_treeLeft(vom);\n\t          vop = d3_layout_treeRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !d3_layout_treeRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !d3_layout_treeLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t    function sizeNode(node) {\n\t      node.x *= size[0];\n\t      node.y = node.depth * size[1];\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null ? sizeNode : null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) == null ? null : sizeNode;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(v) {\n\t    var children = v.children;\n\t    return children.length ? children[0] : v.t;\n\t  }\n\t  function d3_layout_treeRight(v) {\n\t    var children = v.children, n;\n\t    return (n = children.length) ? children[n - 1] : v.t;\n\t  }\n\t  function d3_layout_treeMove(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t  function d3_layout_treeShift(v) {\n\t    var shift = 0, change = 0, children = v.children, i = children.length, w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t  function d3_layout_treeAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = root.y = 0;\n\t      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    return domain;\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    if (format) {\n\t      var match = d3_format_re.exec(format);\n\t      match.shift();\n\t      if (match[8] === \"s\") {\n\t        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n\t        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n\t        match[8] = \"f\";\n\t        format = d3.format(match.join(\"\"));\n\t        return function(d) {\n\t          return format(prefix.scale(d)) + prefix.symbol;\n\t        };\n\t      }\n\t      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n\t      format = match.join(\"\");\n\t    } else {\n\t      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n\t    }\n\t    return d3.format(format);\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(1, base * n / scale.ticks().length);\n\t      return function(d) {\n\t        var i = d / pow(Math.round(log(d)));\n\t        if (i * base < base - .5) i *= base;\n\t        return i <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n\t      0) : (stop - start) / (domain.length - 1 + padding);\n\t      range = steps(start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundPoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n\t      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n\t      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangeRoundPoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n\t      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  function d3_zero() {\n\t    return 0;\n\t  }\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n\t    function arc() {\n\t      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n\t      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n\t      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n\t      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n\t      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n\t        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n\t        if (!cw) p1 *= -1;\n\t        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n\t        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n\t      }\n\t      if (r1) {\n\t        x0 = r1 * Math.cos(a0 + p1);\n\t        y0 = r1 * Math.sin(a0 + p1);\n\t        x1 = r1 * Math.cos(a1 - p1);\n\t        y1 = r1 * Math.sin(a1 - p1);\n\t        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\t        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n\t          var h1 = (a0 + a1) / 2;\n\t          x0 = r1 * Math.cos(h1);\n\t          y0 = r1 * Math.sin(h1);\n\t          x1 = y1 = null;\n\t        }\n\t      } else {\n\t        x0 = y0 = 0;\n\t      }\n\t      if (r0) {\n\t        x2 = r0 * Math.cos(a1 - p0);\n\t        y2 = r0 * Math.sin(a1 - p0);\n\t        x3 = r0 * Math.cos(a0 + p0);\n\t        y3 = r0 * Math.sin(a0 + p0);\n\t        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\t        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n\t          var h0 = (a0 + a1) / 2;\n\t          x2 = r0 * Math.cos(h0);\n\t          y2 = r0 * Math.sin(h0);\n\t          x3 = y3 = null;\n\t        }\n\t      } else {\n\t        x2 = y2 = 0;\n\t      }\n\t      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n\t        cr = r0 < r1 ^ cw ? 0 : 1;\n\t        var rc1 = rc, rc0 = rc;\n\t        if (da < π) {\n\t          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t        if (x1 != null) {\n\t          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n\t          if (rc === rc1) {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n\t          } else {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n\t          }\n\t        } else {\n\t          path.push(\"M\", x0, \",\", y0);\n\t        }\n\t        if (x3 != null) {\n\t          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n\t          if (rc === rc0) {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          } else {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          }\n\t        } else {\n\t          path.push(\"L\", x2, \",\", y2);\n\t        }\n\t      } else {\n\t        path.push(\"M\", x0, \",\", y0);\n\t        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n\t        path.push(\"L\", x2, \",\", y2);\n\t        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n\t      }\n\t      path.push(\"Z\");\n\t      return path.join(\"\");\n\t    }\n\t    function circleSegment(r1, cw) {\n\t      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.cornerRadius = function(v) {\n\t      if (!arguments.length) return cornerRadius;\n\t      cornerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padRadius = function(v) {\n\t      if (!arguments.length) return padRadius;\n\t      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padAngle = function(v) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcAuto = \"auto\";\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_arcPadAngle(d) {\n\t    return d && d.padAngle;\n\t  }\n\t  function d3_svg_arcSweep(x0, y0, x1, y1) {\n\t    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n\t  }\n\t  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n\t    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return points.join(\"L\") + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] - halfπ;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  d3_selectionPrototype.transition = function(name) {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function(name) {\n\t    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n\t  };\n\t  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\t  function d3_selection_interruptNS(ns) {\n\t    return function() {\n\t      var lock, activeId, active;\n\t      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        if (--lock.count) delete lock[activeId]; else delete this[ns];\n\t        lock.active += .5;\n\t        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n\t      }\n\t    };\n\t  }\n\t  function d3_transition(groups, ns, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.namespace = ns;\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection, name) {\n\t    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.namespace, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node[ns][id].tween.remove(name);\n\t    } : function(node) {\n\t      node[ns][id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id, ns = groups.namespace;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node[ns][id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    var ns = this.namespace;\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node[ns][id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].delay;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node[ns][id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].duration;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node[ns][id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      try {\n\t        d3_transitionInheritId = id;\n\t        d3_selection_each(this, function(node, i, j) {\n\t          d3_transitionInherit = node[ns][id];\n\t          type.call(node, node.__data__, i, j);\n\t        });\n\t      } finally {\n\t        d3_transitionInherit = inherit;\n\t        d3_transitionInheritId = inheritId;\n\t      }\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node[ns][id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id0];\n\t          d3_transitionNode(node, i, ns, id1, {\n\t            time: transition.time,\n\t            ease: transition.ease,\n\t            delay: transition.delay + transition.duration,\n\t            duration: transition.duration\n\t          });\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id1);\n\t  };\n\t  function d3_transitionNamespace(name) {\n\t    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n\t  }\n\t  function d3_transitionNode(node, i, ns, id, inherit) {\n\t    var lock = node[ns] || (node[ns] = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id], time, timer, duration, ease, tweens;\n\t    function schedule(elapsed) {\n\t      var delay = transition.delay;\n\t      timer.t = delay + time;\n\t      if (delay <= elapsed) return start(elapsed - delay);\n\t      timer.c = start;\n\t    }\n\t    function start(elapsed) {\n\t      var activeId = lock.active, active = lock[activeId];\n\t      if (active) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        --lock.count;\n\t        delete lock[activeId];\n\t        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n\t      }\n\t      for (var cancelId in lock) {\n\t        if (+cancelId < id) {\n\t          var cancel = lock[cancelId];\n\t          cancel.timer.c = null;\n\t          cancel.timer.t = NaN;\n\t          --lock.count;\n\t          delete lock[cancelId];\n\t        }\n\t      }\n\t      timer.c = tick;\n\t      d3_timer(function() {\n\t        if (timer.c && tick(elapsed || 1)) {\n\t          timer.c = null;\n\t          timer.t = NaN;\n\t        }\n\t        return 1;\n\t      }, 0, time);\n\t      lock.active = id;\n\t      transition.event && transition.event.start.call(node, node.__data__, i);\n\t      tweens = [];\n\t      transition.tween.forEach(function(key, value) {\n\t        if (value = value.call(node, node.__data__, i)) {\n\t          tweens.push(value);\n\t        }\n\t      });\n\t      ease = transition.ease;\n\t      duration = transition.duration;\n\t    }\n\t    function tick(elapsed) {\n\t      var t = elapsed / duration, e = ease(t), n = tweens.length;\n\t      while (n > 0) {\n\t        tweens[--n].call(node, e);\n\t      }\n\t      if (t >= 1) {\n\t        transition.event && transition.event.end.call(node, node.__data__, i);\n\t        if (--lock.count) delete lock[id]; else delete node[ns];\n\t        return 1;\n\t      }\n\t    }\n\t    if (!transition) {\n\t      time = inherit.time;\n\t      timer = d3_timer(schedule, 0, time);\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        timer: timer,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration,\n\t        ease: inherit.ease,\n\t        index: i\n\t      };\n\t      inherit = null;\n\t      ++lock.count;\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n\t        if (orient === \"bottom\" || orient === \"top\") {\n\t          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n\t          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n\t          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n\t        } else {\n\t          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n\t          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n\t          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n\t        }\n\t        lineEnter.attr(y2, sign * innerTickSize);\n\t        textEnter.attr(y1, sign * tickSpacing);\n\t        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n\t        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1, scale0);\n\t        }\n\t        tickEnter.call(tickTransform, scale0, scale1);\n\t        tickUpdate.call(tickTransform, scale1, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = d3_array(arguments);\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x0, x1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = x0(d);\n\t      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y0, y1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = y0(d);\n\t      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n\t  var d3_time_formatUtc = d3_time_format.utc;\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n\t    return d.getMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.e = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n\t}();\n\n/***/ }\n\n},[207]);\n\n\n/** WEBPACK FOOTER **\n ** app.js\n **/","export const CHANGE_UNIQUE_RIDES = 'CHANGE_UNIQUE_RIDES';\nexport const CHANGE_PEOPLE = 'CHANGE_PEOPLE';\n\nexport const START_COMPUTE = 'START_COMPUTE';\nexport const END_COMPUTE = 'END_COMPUTE';\n\nexport const TOGGLE_ADVANCED = 'TOGGLE_ADVANCED';\nexport const CHANGE_ITERATIONS = 'CHANGE_ITERATIONS';\nexport const CHANGE_MAX_LENGTH = 'CHANGE_MAX_LENGTH';\nexport const CHANGE_TRIM = 'CHANGE_TRIM';\n\n\n\n/** WEBPACK FOOTER **\n ** ./actions.js\n **/","import React from 'react';\n\nimport d3 from 'd3';\n\n\nexport class SimcoGraph extends React.Component {\n\n    componentDidMount() {\n        this.displaySVGChart();\n    }\n\n    componentDidUpdate() {\n        this.displaySVGChart();\n    }\n\n    displaySVGChart() {\n        this.refs.svgChart.innerHTML = null;\n        let data = this.props.results.get('data');\n\n        var margin = {top: 50, right: 50, bottom: 50, left: 50},\n            width = this.refs.svgChart.getBoundingClientRect().width - margin.left - margin.right,\n            height = 500 - margin.top - margin.bottom;\n\n        var x = d3.scale.ordinal()\n            .rangeRoundBands([0, width], .1);\n\n        var y = d3.scale.linear()\n            .range([height, 0]);\n\n        var xAxis = d3.svg.axis()\n            .scale(x)\n            .orient(\"bottom\");\n\n        var yAxis = d3.svg.axis()\n            .scale(y)\n            .orient(\"left\")\n            .ticks(10, \"%\");\n\n        var svg = d3.select(this.refs.svgChart).append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        x.domain(data.map(function(d) { return d.label; }));\n        y.domain([0, d3.max(data, function(d) { return d.freq; })]);\n\n        svg.append(\"g\")\n            .attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(xAxis)\n            .append(\"text\")\n            .attr(\"transform\", \"translate(\" + (width - 100) + \", 30)\")\n            .text(\"Trajets partagés\");\n\n        svg.append(\"g\")\n            .attr(\"class\", \"y axis\")\n            .call(yAxis)\n            .append(\"text\")\n            .attr(\"transform\", \"rotate(-90)\")\n            .attr(\"y\", 6)\n            .attr(\"dy\", \".71em\")\n            .style(\"text-anchor\", \"end\")\n            .text(\"Fréquence\");\n\n        svg.selectAll(\".bar\")\n            .data(data)\n            .enter().append(\"rect\")\n            .attr(\"class\", \"bar\")\n            .attr(\"x\", function(d) { return x(d.label); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"y\", function(d) { return y(d.freq); })\n            .attr(\"height\", function(d) { return height - y(d.freq); });\n    }\n\n    render() {\n        return <div ref='svgChart' style={{marginTop: '50px'}}></div>;\n    }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./graph.js\n **/","import Immutable from 'immutable';\n\nimport * as actions from './actions';\n\n\nfunction makeResults(worker) {\n    return function results(state, action, wholeState) {\n        if(state === undefined) {\n            state = Immutable.Map({\n                isComputing: false,\n                hasComputed: false,\n                data: []\n            });\n        }\n\n        if(action.type === actions.START_COMPUTE) {\n            worker.postMessage({\n                MAX_LENGTH: wholeState.get('advanced').get('MAX_LENGTH'),\n                PEOPLE_IN_CAR: wholeState.get('advanced').get('PEOPLE_IN_CAR'),\n                ITERATIONS: wholeState.get('advanced').get('ITERATIONS'),\n                TRIM: wholeState.get('advanced').get('TRIM'),\n                people: wholeState.get('people'),\n                uniqueRides: wholeState.get('uniqueRides')\n            });\n            return state.set('isComputing', true);\n        }\n\n        if(action.type === actions.END_COMPUTE) {\n            state = state.set('isComputing', false);\n            state = state.set('hasComputed', true);\n            return state.set('data', action.data);\n        }\n\n        return state;\n    }\n}\n\n\nfunction advanced(state, action) {\n    if(state === undefined) {\n        state = Immutable.Map({\n            ITERATIONS: 1000,\n            PEOPLE_IN_CAR: 2,\n            MAX_LENGTH: 20,\n            TRIM: false,\n            shown: false\n        });\n    }\n\n    if(action.type === actions.TOGGLE_ADVANCED) {\n        return state.set('shown', !state.get('shown'));\n    }\n\n    if(action.type === actions.CHANGE_ITERATIONS) {\n        return state.set('ITERATIONS', parseInt(action.iterations));\n    }\n\n    if(action.type === actions.CHANGE_MAX_LENGTH) {\n        return state.set('MAX_LENGTH', parseInt(action.maxLength));\n    }\n\n    if(action.type === actions.CHANGE_TRIM) {\n        return state.set('TRIM', action.trim === 'true');\n    }\n\n    return state;\n}\n\n\nfunction uniqueRides(state=1, action) {\n    if(action.type === actions.CHANGE_UNIQUE_RIDES) {\n        return parseInt(action.uniqueRides);\n    }\n\n    return state;\n}\n\n\nfunction people(state=1, action) {\n    if(action.type === actions.CHANGE_PEOPLE) {\n        return parseInt(action.people);\n    }\n\n    return state;\n}\n\n\nexport default function makeReducer(worker) {\n    const results = makeResults(worker);\n\n    return function(state, action) {\n        if(state === undefined) {\n            state = Immutable.Map();\n        }\n\n        state = state.set('advanced', advanced(state.get('advanced'), action));\n        state = state.set('uniqueRides', uniqueRides(state.get('uniqueRides'), action));\n        state = state.set('people', people(state.get('people'), action));\n        state = state.set('results', results(state.get('results'), action, state));\n\n        return state;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./reducer.js\n **/","module.exports = function() {\n\treturn new Worker(__webpack_public_path__ + \"309a186922b6dc66ba98.worker.js\");\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/worker-loader!./worker.js\n ** module id = 206\n ** module chunks = 1\n **/","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider, connect } from 'react-redux';\n\nimport * as actions from './actions';\nimport { SimcoGraph } from './graph';\nimport makeReducer from './reducer';\nimport SimcoWorker from 'worker!./worker';\n\n\nclass SimcoUnconnected extends React.Component {\n\n    render() {\n        return (<div style={{width: '80%', margin: 'auto'}}>\n            <div style={{display: 'flex', flexDirection: 'row', maxWidth: '600px', margin: 'auto'}}>\n                <div style={{flex: 1, padding: '5px'}}>\n                    <label style={{display: 'block', marginBottom: '5px'}}>Trajet(s) unique(s)</label>\n                    <input\n                        min='1'\n                        onChange={(e) => { this.props.dispatch({\n                            type: actions.CHANGE_UNIQUE_RIDES,\n                            uniqueRides: e.target.value\n                        }); }}\n                        style={{width: '100%'}}\n                        type='number'\n                        step='1'\n                        value={this.props.uniqueRides}\n                    />\n                </div>\n                <div style={{flex: 1, padding: '5px'}}>\n                    <label style={{display: 'block', marginBottom: '5px'}}>Voyageur(s)</label>\n                    <input\n                        min='1'\n                        onChange={(e) => { this.props.dispatch({\n                            type: actions.CHANGE_PEOPLE,\n                            people: e.target.value\n                        }); }}\n                        style={{width: '100%'}}\n                        type='number'\n                        step='1'\n                        value={this.props.people}\n                    />\n                </div>\n                <div style={{flex: 1, padding: '5px', display: 'flex', alignItems: 'flex-end'}}>\n                    <button\n                        disabled={this.props.results.get('isComputing')}\n                        onClick={() => { this.props.dispatch({type: actions.START_COMPUTE}); }}\n                        style={{height: '37px', width: '100%'}}\n                    >\n                        Calculer\n                    </button>\n                </div>\n            </div>\n\n            <div style={{maxWidth: '600px', margin: 'auto'}}>\n                <p style={{paddingRight: '5px', margin:0, textAlign: 'right', fontSize: '0.8em'}}>\n                    <a href=\"#\" onClick={(e) => { e.preventDefault(); this.props.dispatch({type: actions.TOGGLE_ADVANCED}); }}>\n                        Réglages avancés\n                    </a>\n                </p>\n                {this.props.advanced.get('shown') ?\n                    <div style={{display: 'flex', flexDirection: 'row', fontSize: '0.8em'}}>\n                        <div style={{flex: 2}}></div>\n                        <div style={{flex: 1, padding: '5px'}}>\n                            <label style={{display: 'block', marginBottom: '5px'}}>Passes</label>\n                            <input\n                                onChange={(e) => { this.props.dispatch({\n                                    type: actions.CHANGE_ITERATIONS,\n                                    iterations: e.target.value\n                                }); }}\n                                style={{width: '100%'}}\n                                type='number'\n                                value={this.props.advanced.get('ITERATIONS')}\n                            />\n                        </div>\n                        <div style={{flex: 1, padding: '5px'}}>\n                            <label style={{display: 'block', marginBottom: '5px'}}>Max groupes</label>\n                            <input\n                                max='30'\n                                min='2'\n                                onChange={(e) => { this.props.dispatch({\n                                    type: actions.CHANGE_MAX_LENGTH,\n                                    maxLength: e.target.value\n                                }); }}\n                                style={{width: '100%'}}\n                                type='number'\n                                step='1'\n                                value={this.props.advanced.get('MAX_LENGTH')}\n                            />\n                        </div>\n                        <div style={{flex: 1, padding: '5px'}}>\n                            <label style={{display: 'block', marginBottom: '5px'}}>Trim</label>\n                            <select\n                                onChange={(e) => { this.props.dispatch({\n                                    type: actions.CHANGE_TRIM,\n                                    trim: e.target.value\n                                }); }}\n                                style={{height: '29px'}}\n                                value={this.props.advanced.get('TRIM') ? 'true' : 'false'}\n                            >\n                                <option value={'false'}>Sans</option>\n                                <option value={'true'}>Avec</option>\n                            </select>\n                        </div>\n                    </div>\n                : null}\n            </div>\n\n            {this.props.results.get('hasComputed') ?\n                <SimcoGraph results={this.props.results} />\n            : null}\n        </div>);\n    }\n\n}\n\n\nconst select = (state) => ({\n    advanced: state.get('advanced'),\n    uniqueRides: state.get('uniqueRides'),\n    people: state.get('people'),\n    results: state.get('results')\n});\n\n\nconst Simco = connect(select)(SimcoUnconnected);\n\n\nfunction mountSimcoApp(options) {\n    const worker = new SimcoWorker();\n\n    const store = createStore(makeReducer(worker));\n\n    worker.onmessage = function(event) {\n        store.dispatch({\n            type: actions.END_COMPUTE,\n            data: event.data.formattedFrequencies\n        })\n    }\n\n    ReactDOM.render(<Provider store={store}>\n        <Simco />\n    </Provider>, options.node);\n}\n\n\nwindow.mountSimcoApp = mountSimcoApp;\n\n\n\n/** WEBPACK FOOTER **\n ** ./main.js\n **/","!function() {\n  var d3 = {\n    version: \"3.5.16\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/d3/d3.js\n ** module id = 387\n ** module chunks = 1\n **/"],"sourceRoot":""}