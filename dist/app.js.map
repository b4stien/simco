{"version":3,"sources":["webpack:///app.js","webpack:///./actions.js","webpack:///./reducer.js","webpack:///../~/d3/d3.js","webpack:///./worker.js","webpack:///./main.js"],"names":["webpackJsonp",136,"module","exports","__webpack_require__","CHANGE_UNIQUE_RIDES","Object","defineProperty","configurable","enumerable","get","CHANGE_PEOPLE","START_COMPUTE","END_COMPUTE",202,"makeResults","worker","state","action","wholeState","undefined","__WEBPACK_IMPORTED_MODULE_0_immutable___default","a","Map","isComputing","hasComputed","data","type","__WEBPACK_IMPORTED_MODULE_1__actions__","postMessage","MAX_LENGTH","PEOPLE_IN_CAR","ITERATIONS","people","uniqueRides","set","arguments","length","parseInt","makeReducer","results","__WEBPACK_IMPORTED_MODULE_0_immutable__","__esModule",204,"__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","b","NaN","d3_number","x","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","mid","right","d3_transposeLength","d","d3_range_integerScale","k","d3_class","ctor","properties","key","prototype","value","d3_Map","this","_","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","keys","push","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","source","method","apply","d3_vendorSymbol","object","name","charAt","toUpperCase","i","n","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","listeners","on","listenerByName","listener","indexOf","concat","remove","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","s","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","map","d3_selection_classedName","re","c","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","d3_nsXhtml","createElement","createElementNS","createNS","d3_selectionRemove","parent","parentNode","removeChild","d3_selection_dataNode","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","m","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","call","addEventListener","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","select","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","window","scrollX","scrollY","append","position","top","margin","padding","border","ctm","getScreenCTM","f","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","Math","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","max","toString","min","format","hsl","color","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","forEach","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer","delay","then","Date","now","time","timer","t","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","clearTimeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","Infinity","d3_format_precision","p","ceil","log","LN10","d3_formatPrefix","abs","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","substring","reverse","join","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","Array","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","range","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","hasOwnProperty","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","root","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","transform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","active","count","interrupt","d3_transition","id","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","schedule","elapsed","transition","cancelId","cancel","tick","tweens","ease","duration","d3_svg_axisX","attr","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","transpose","matrix","row","zip","entries","arrays","merged","Error","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","property","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","html","innerHTML","appendChild","insertBefore","bind","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","correspondingElement","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","coshr0","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","default","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML",206,"Worker",207,"_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","constructor","writable","setPrototypeOf","mountSimcoApp","options","__WEBPACK_IMPORTED_MODULE_7_worker_worker___default","store","__WEBPACK_IMPORTED_MODULE_2_redux__","__WEBPACK_IMPORTED_MODULE_6__reducer__","onmessage","__WEBPACK_IMPORTED_MODULE_5__actions__","formattedFrequencies","__WEBPACK_IMPORTED_MODULE_1_react_dom___default","render","__WEBPACK_IMPORTED_MODULE_0_react___default","__WEBPACK_IMPORTED_MODULE_3_react_redux__","Simco","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_1_react_dom__","__WEBPACK_IMPORTED_MODULE_2_redux___default","__WEBPACK_IMPORTED_MODULE_3_react_redux___default","__WEBPACK_IMPORTED_MODULE_4_d3__","__WEBPACK_IMPORTED_MODULE_4_d3___default","__WEBPACK_IMPORTED_MODULE_7_worker_worker__","_createClass","defineProperties","props","descriptor","protoProps","staticProps","SimcoGraph","_React$Component","getPrototypeOf","displaySVGChart","refs","svgChart","height","xAxis","yAxis","label","freq","ref","marginTop","Component","SimcoUnconnected","_React$Component2","_this3","display","flexDirection","maxWidth","flex","marginBottom","onChange","alignItems","onClick"],"mappings":"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","file":"app.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 136:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar CHANGE_UNIQUE_RIDES = 'CHANGE_UNIQUE_RIDES';\n\t/* harmony export */ Object.defineProperty(exports, \"CHANGE_UNIQUE_RIDES\", {configurable: false, enumerable: true, get: function() { return CHANGE_UNIQUE_RIDES; }});\n\tvar CHANGE_PEOPLE = 'CHANGE_PEOPLE';\n\t/* harmony export */ Object.defineProperty(exports, \"CHANGE_PEOPLE\", {configurable: false, enumerable: true, get: function() { return CHANGE_PEOPLE; }});\n\t\n\tvar START_COMPUTE = 'START_COMPUTE';\n\t/* harmony export */ Object.defineProperty(exports, \"START_COMPUTE\", {configurable: false, enumerable: true, get: function() { return START_COMPUTE; }});\n\tvar END_COMPUTE = 'END_COMPUTE';\n\t/* harmony export */ Object.defineProperty(exports, \"END_COMPUTE\", {configurable: false, enumerable: true, get: function() { return END_COMPUTE; }});\n\n/***/ },\n\n/***/ 202:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_immutable__ = __webpack_require__(137);\n\t/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_immutable___default = __WEBPACK_IMPORTED_MODULE_0_immutable__ && __WEBPACK_IMPORTED_MODULE_0_immutable__.__esModule ? function() { return __WEBPACK_IMPORTED_MODULE_0_immutable__['default'] } : function() { return __WEBPACK_IMPORTED_MODULE_0_immutable__; }\n\t/* harmony import */ Object.defineProperty(__WEBPACK_IMPORTED_MODULE_0_immutable___default, 'a', { get: __WEBPACK_IMPORTED_MODULE_0_immutable___default });\n\t/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__actions__ = __webpack_require__(136);\n\t/* harmony export */ exports[\"a\"] = makeReducer;'use strict';\n\t\n\t\n\t\n\t\n\t\n\tfunction makeResults(worker) {\n\t    return function results(state, action, wholeState) {\n\t        if (state === undefined) {\n\t            state = /* harmony import */__WEBPACK_IMPORTED_MODULE_0_immutable___default.a.Map({\n\t                isComputing: false,\n\t                hasComputed: false,\n\t                data: []\n\t            });\n\t        }\n\t\n\t        if (action.type === /* harmony namespace import */ __WEBPACK_IMPORTED_MODULE_1__actions__.START_COMPUTE) {\n\t            worker.postMessage({\n\t                MAX_LENGTH: 20,\n\t                PEOPLE_IN_CAR: 2,\n\t                ITERATIONS: 1000,\n\t                people: wholeState.get('people'),\n\t                uniqueRides: wholeState.get('uniqueRides')\n\t            });\n\t            return state.set('isComputing', true);\n\t        }\n\t\n\t        if (action.type === /* harmony namespace import */ __WEBPACK_IMPORTED_MODULE_1__actions__.END_COMPUTE) {\n\t            state = state.set('isComputing', false);\n\t            state = state.set('hasComputed', true);\n\t            return state.set('data', action.data);\n\t        }\n\t\n\t        return state;\n\t    };\n\t}\n\t\n\tfunction uniqueRides() {\n\t    var state = arguments.length <= 0 || arguments[0] === undefined ? 1 : arguments[0];\n\t    var action = arguments[1];\n\t\n\t    if (action.type === /* harmony namespace import */ __WEBPACK_IMPORTED_MODULE_1__actions__.CHANGE_UNIQUE_RIDES) {\n\t        return parseInt(action.uniqueRides);\n\t    }\n\t\n\t    return state;\n\t}\n\t\n\tfunction people() {\n\t    var state = arguments.length <= 0 || arguments[0] === undefined ? 1 : arguments[0];\n\t    var action = arguments[1];\n\t\n\t    if (action.type === /* harmony namespace import */ __WEBPACK_IMPORTED_MODULE_1__actions__.CHANGE_PEOPLE) {\n\t        return parseInt(action.people);\n\t    }\n\t\n\t    return state;\n\t}\n\t\n\tfunction makeReducer(worker) {\n\t    var results = makeResults(worker);\n\t\n\t    return function (state, action) {\n\t        if (state === undefined) {\n\t            state = /* harmony import */__WEBPACK_IMPORTED_MODULE_0_immutable___default.a.Map();\n\t        }\n\t\n\t        state = state.set('uniqueRides', uniqueRides(state.get('uniqueRides'), action));\n\t        state = state.set('people', people(state.get('people'), action));\n\t        state = state.set('results', results(state.get('results'), action, state));\n\t\n\t        return state;\n\t    };\n\t}\n\n/***/ },\n\n/***/ 204:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var d3 = {\n\t    version: \"3.5.16\"\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = this.document;\n\t  function d3_documentElement(node) {\n\t    return node && (node.ownerDocument || node.document || node).documentElement;\n\t  }\n\t  function d3_window(node) {\n\t    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n\t  }\n\t  if (d3_document) {\n\t    try {\n\t      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n\t    } catch (e) {\n\t      d3_array = function(list) {\n\t        var i = list.length, array = new Array(i);\n\t        while (i--) array[i] = list[i];\n\t        return array;\n\t      };\n\t    }\n\t  }\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  if (d3_document) {\n\t    try {\n\t      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n\t    } catch (error) {\n\t      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t      d3_element_prototype.setAttribute = function(name, value) {\n\t        d3_element_setAttribute.call(this, name, value + \"\");\n\t      };\n\t      d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t      };\n\t      d3_style_prototype.setProperty = function(name, value, priority) {\n\t        d3_style_setProperty.call(this, name, value + \"\", priority);\n\t      };\n\t    }\n\t  }\n\t  d3.ascending = d3_ascending;\n\t  function d3_ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  function d3_number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t  function d3_numeric(x) {\n\t    return !isNaN(x);\n\t  }\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  d3.mean = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1, j = n;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n\t    }\n\t    if (j) return s / j;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    var numbers = [], n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n\t    }\n\t    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n\t  };\n\t  d3.variance = function(array, f) {\n\t    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t  d3.deviation = function() {\n\t    var v = d3.variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t  function d3_bisector(compare) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t  var d3_bisect = d3_bisector(d3_ascending);\n\t  d3.bisectLeft = d3_bisect.left;\n\t  d3.bisect = d3.bisectRight = d3_bisect.right;\n\t  d3.bisector = function(f) {\n\t    return d3_bisector(f.length === 1 ? function(d, x) {\n\t      return d3_ascending(f(d), x);\n\t    } : f);\n\t  };\n\t  d3.shuffle = function(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t    var m = i1 - i0, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.transpose = function(matrix) {\n\t    if (!(n = matrix.length)) return [];\n\t    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n\t        row[j] = matrix[j][i];\n\t      }\n\t    }\n\t    return transpose;\n\t  };\n\t  function d3_transposeLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.zip = function() {\n\t    return d3.transpose(arguments);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    for (var key in properties) {\n\t      Object.defineProperty(ctor.prototype, key, {\n\t        value: properties[key],\n\t        enumerable: false\n\t      });\n\t    }\n\t  }\n\t  d3.map = function(object, f) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) {\n\t      object.forEach(function(key, value) {\n\t        map.set(key, value);\n\t      });\n\t    } else if (Array.isArray(object)) {\n\t      var i = -1, n = object.length, o;\n\t      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n\t    } else {\n\t      for (var key in object) map.set(key, object[key]);\n\t    }\n\t    return map;\n\t  };\n\t  function d3_Map() {\n\t    this._ = Object.create(null);\n\t  }\n\t  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n\t  d3_class(d3_Map, {\n\t    has: d3_map_has,\n\t    get: function(key) {\n\t      return this._[d3_map_escape(key)];\n\t    },\n\t    set: function(key, value) {\n\t      return this._[d3_map_escape(key)] = value;\n\t    },\n\t    remove: d3_map_remove,\n\t    keys: d3_map_keys,\n\t    values: function() {\n\t      var values = [];\n\t      for (var key in this._) values.push(this._[key]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var key in this._) entries.push({\n\t        key: d3_map_unescape(key),\n\t        value: this._[key]\n\t      });\n\t      return entries;\n\t    },\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n\t    }\n\t  });\n\t  function d3_map_escape(key) {\n\t    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n\t  }\n\t  function d3_map_unescape(key) {\n\t    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n\t  }\n\t  function d3_map_has(key) {\n\t    return d3_map_escape(key) in this._;\n\t  }\n\t  function d3_map_remove(key) {\n\t    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n\t  }\n\t  function d3_map_keys() {\n\t    var keys = [];\n\t    for (var key in this._) keys.push(d3_map_unescape(key));\n\t    return keys;\n\t  }\n\t  function d3_map_size() {\n\t    var size = 0;\n\t    for (var key in this._) ++size;\n\t    return size;\n\t  }\n\t  function d3_map_empty() {\n\t    for (var key in this._) return false;\n\t    return true;\n\t  }\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {\n\t    this._ = Object.create(null);\n\t  }\n\t  d3_class(d3_Set, {\n\t    has: d3_map_has,\n\t    add: function(key) {\n\t      this._[d3_map_escape(key += \"\")] = true;\n\t      return key;\n\t    },\n\t    remove: d3_map_remove,\n\t    values: d3_map_keys,\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key));\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.slice(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.slice(i + 1);\n\t      type = type.slice(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatches = function(n, s) {\n\t    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\t    d3_selectMatches = function(n, s) {\n\t      return d3_selectMatcher.call(n, s);\n\t    };\n\t    return d3_selectMatches(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = Sizzle;\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3.select(d3_document.documentElement);\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: d3_nsXhtml,\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) {\n\t        var node = this.node();\n\t        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n\t      }\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    function create() {\n\t      var document = this.ownerDocument, namespace = this.namespaceURI;\n\t      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n\t    }\n\t    function createNS() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    }\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(d3_selectionRemove);\n\t  };\n\t  function d3_selectionRemove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          if (node = group[i]) {\n\t            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n\t              exitNodes[i] = node;\n\t            } else {\n\t              nodeByKeyValue.set(keyValue, node);\n\t            }\n\t            keyValues[i] = keyValue;\n\t          }\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          } else if (node !== true) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          }\n\t          nodeByKeyValue.set(keyValue, true);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3_ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    d3_selection_each(this, function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3.select = function(node) {\n\t    var group;\n\t    if (typeof node === \"string\") {\n\t      group = [ d3_select(node, d3_document) ];\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = [ node ];\n\t      group.parentNode = d3_documentElement(node);\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group;\n\t    if (typeof nodes === \"string\") {\n\t      group = d3_array(d3_selectAll(nodes, d3_document));\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = d3_array(nodes);\n\t      group.parentNode = null;\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.slice(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  if (d3_document) {\n\t    d3_selection_onFilters.forEach(function(k) {\n\t      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t    });\n\t  }\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect, d3_event_dragId = 0;\n\t  function d3_event_dragSuppress(node) {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect == null) {\n\t      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n\t    }\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        var off = function() {\n\t          w.on(click, null);\n\t        };\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0) {\n\t        var window = d3_window(container);\n\t        if (window.scrollX || window.scrollY) {\n\t          svg = d3.select(\"body\").append(\"svg\").style({\n\t            position: \"absolute\",\n\t            top: 0,\n\t            left: 0,\n\t            margin: 0,\n\t            padding: 0,\n\t            border: \"none\"\n\t          }, \"important\");\n\t          var ctm = svg[0][0].getScreenCTM();\n\t          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t          svg.remove();\n\t        }\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touch = function(container, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n\t    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return d3_mousePoint(container, touch);\n\t      }\n\t    }\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function dragstart(id, position, subject, move, end) {\n\t      return function() {\n\t        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n\t        if (origin) {\n\t          dragOffset = origin.apply(that, arguments);\n\t          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n\t        } else {\n\t          dragOffset = [ 0, 0 ];\n\t        }\n\t        dispatch({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var position1 = position(parent, dragId), dx, dy;\n\t          if (!position1) return;\n\t          dx = position1[0] - position0[0];\n\t          dy = position1[1] - position0[1];\n\t          dragged |= dx | dy;\n\t          position0 = position1;\n\t          dispatch({\n\t            type: \"drag\",\n\t            x: position1[0] + dragOffset[0],\n\t            y: position1[1] + dragOffset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          if (!position(parent, dragId)) return;\n\t          dragSubject.on(move + dragName, null).on(end + dragName, null);\n\t          dragRestore(dragged);\n\t          dispatch({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  function d3_behavior_dragTouchId() {\n\t    return d3.event.changedTouches[0].identifier;\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_cross2d(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n\t    if (d2 < ε2) {\n\t      S = Math.log(w1 / w0) / ρ;\n\t      i = function(t) {\n\t        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n\t      };\n\t    } else {\n\t      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t      S = (r1 - r0) / ρ;\n\t      i = function(t) {\n\t        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      };\n\t    }\n\t    i.duration = S * 1e3;\n\t    return i;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    if (!d3_behavior_zoomWheel) {\n\t      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return d3.event.wheelDelta;\n\t      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.detail;\n\t      }, \"MozMousePixelScroll\");\n\t    }\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var dispatch = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(dispatch);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(dispatch);\n\t            };\n\t          }).each(\"interrupt.zoom\", function() {\n\t            zoomended(dispatch);\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(dispatch);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(dispatch);\n\t          zoomed(dispatch);\n\t          zoomended(dispatch);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: null\n\t      };\n\t      scaleTo(+_);\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.duration = function(_) {\n\t      if (!arguments.length) return duration;\n\t      duration = +_;\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function zoomTo(that, p, l, k) {\n\t      that.__chart__ = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: view.k\n\t      };\n\t      scaleTo(Math.pow(2, k));\n\t      translateTo(center0 = p, l);\n\t      that = d3.select(that);\n\t      if (duration > 0) that = that.transition().duration(duration);\n\t      that.call(zoom.event);\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(dispatch) {\n\t      if (!zooming++) dispatch({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(dispatch) {\n\t      rescale();\n\t      dispatch({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(dispatch) {\n\t      if (!--zooming) dispatch({\n\t        type: \"zoomend\"\n\t      }), center0 = null;\n\t    }\n\t    function mousedowned() {\n\t      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n\t      d3_selection_interrupt.call(that);\n\t      zoomstarted(dispatch);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(that), location0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        subject.on(mousemove, null).on(mouseup, null);\n\t        dragRestore(dragged);\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n\t      started();\n\t      zoomstarted(dispatch);\n\t      subject.on(mousedown, null).on(touchstart, started);\n\t      function relocate() {\n\t        var touches = d3.touches(that);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var target = d3.event.target;\n\t        d3.select(target).on(touchmove, moved).on(touchend, ended);\n\t        targets.push(target);\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0];\n\t            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n\t            d3_eventPreventDefault();\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(that), p0, l0, p1, l1;\n\t        d3_selection_interrupt.call(that);\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        d3.selectAll(targets).on(zoomName, null);\n\t        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var dispatch = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n\t      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(dispatch);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(center0, translate0);\n\t      zoomed(dispatch);\n\t    }\n\t    function dblclicked() {\n\t      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n\t      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n\t  d3.color = d3_color;\n\t  function d3_color() {}\n\t  d3_color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = d3_hsl;\n\t  function d3_hsl(h, s, l) {\n\t    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n\t  }\n\t  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = d3_hcl;\n\t  function d3_hcl(h, c, l) {\n\t    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n\t  }\n\t  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = d3_lab;\n\t  function d3_lab(l, a, b) {\n\t    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = d3_rgb;\n\t  function d3_rgb(r, g, b) {\n\t    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n\t  }\n\t  function d3_rgbNumber(value) {\n\t    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return new d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    var r = 0, g = 0, b = 0, m1, m2, color;\n\t    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (color = d3_rgb_names.get(format)) {\n\t      return rgb(color.r, color.g, color.b);\n\t    }\n\t    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n\t      if (format.length === 4) {\n\t        r = (color & 3840) >> 4;\n\t        r = r >> 4 | r;\n\t        g = color & 240;\n\t        g = g >> 4 | g;\n\t        b = color & 15;\n\t        b = b << 4 | b;\n\t      } else if (format.length === 7) {\n\t        r = (color & 16711680) >> 16;\n\t        g = (color & 65280) >> 8;\n\t        b = color & 255;\n\t      }\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    rebeccapurple: 6697881,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  function d3_xhrHasResponse(request) {\n\t    var type = request.responseType;\n\t    return type && type !== \"text\" ? request.response : request.responseText;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t        return text.slice(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function() {\n\t    d3_timer.apply(this, arguments);\n\t  };\n\t  function d3_timer(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t    return timer;\n\t  }\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now(), timer = d3_timer_queueHead;\n\t    while (timer) {\n\t      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n\t      timer = timer.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.c) {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      } else {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value = +value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  function d3_locale_numberFormat(locale) {\n\t    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n\t      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n\t      }\n\t      return t.reverse().join(locale_thousands);\n\t    } : d3_identity;\n\t    return function(specifier) {\n\t      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n\t      if (precision) precision = +precision.substring(1);\n\t      if (zfill || fill === \"0\" && align === \"=\") {\n\t        zfill = fill = \"0\";\n\t        align = \"=\";\n\t      }\n\t      switch (type) {\n\t       case \"n\":\n\t        comma = true;\n\t        type = \"g\";\n\t        break;\n\t\n\t       case \"%\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"f\";\n\t        break;\n\t\n\t       case \"p\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"r\";\n\t        break;\n\t\n\t       case \"b\":\n\t       case \"o\":\n\t       case \"x\":\n\t       case \"X\":\n\t        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\t\n\t       case \"c\":\n\t        exponent = false;\n\t\n\t       case \"d\":\n\t        integer = true;\n\t        precision = 0;\n\t        break;\n\t\n\t       case \"s\":\n\t        scale = -1;\n\t        type = \"r\";\n\t        break;\n\t      }\n\t      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n\t      if (type == \"r\" && !precision) type = \"g\";\n\t      if (precision != null) {\n\t        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t      }\n\t      type = d3_format_types.get(type) || d3_format_typeDefault;\n\t      var zcomma = zfill && comma;\n\t      return function(value) {\n\t        var fullSuffix = suffix;\n\t        if (integer && value % 1) return \"\";\n\t        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\t        if (scale < 0) {\n\t          var unit = d3.formatPrefix(value, precision);\n\t          value = unit.scale(value);\n\t          fullSuffix = unit.symbol + suffix;\n\t        } else {\n\t          value *= scale;\n\t        }\n\t        value = type(value, precision);\n\t        var i = value.lastIndexOf(\".\"), before, after;\n\t        if (i < 0) {\n\t          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n\t          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n\t        } else {\n\t          before = value.substring(0, i);\n\t          after = locale_decimal + value.substring(i + 1);\n\t        }\n\t        if (!zfill && comma) before = formatGroup(before, Infinity);\n\t        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n\t        negative += prefix;\n\t        value = before + after;\n\t        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n\t      };\n\t    };\n\t  }\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_time = d3.time = {}, d3_date = Date;\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  function d3_locale_timeFormat(locale) {\n\t    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\t    function d3_time_format(template) {\n\t      var n = template.length;\n\t      function format(date) {\n\t        var string = [], i = -1, j = 0, c, p, f;\n\t        while (++i < n) {\n\t          if (template.charCodeAt(i) === 37) {\n\t            string.push(template.slice(j, i));\n\t            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t        string.push(template.slice(j, i));\n\t        return string.join(\"\");\n\t      }\n\t      format.parse = function(string) {\n\t        var d = {\n\t          y: 1900,\n\t          m: 0,\n\t          d: 1,\n\t          H: 0,\n\t          M: 0,\n\t          S: 0,\n\t          L: 0,\n\t          Z: null\n\t        }, i = d3_time_parse(d, template, string, 0);\n\t        if (i != string.length) return null;\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n\t          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t          date.setFullYear(d.y, 0, 1);\n\t          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t        } else date.setFullYear(d.y, d.m, d.d);\n\t        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n\t        return localZ ? date._ : date;\n\t      };\n\t      format.toString = function() {\n\t        return template;\n\t      };\n\t      return format;\n\t    }\n\t    function d3_time_parse(date, template, string, j) {\n\t      var c, p, t, i = 0, n = template.length, m = string.length;\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = template.charCodeAt(i++);\n\t        if (c === 37) {\n\t          t = template.charAt(i++);\n\t          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t          if (!p || (j = p(date, string, j)) < 0) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t      return j;\n\t    }\n\t    d3_time_format.utc = function(template) {\n\t      var local = d3_time_format(template);\n\t      function format(date) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var utc = new d3_date();\n\t          utc._ = date;\n\t          return local(utc);\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      }\n\t      format.parse = function(string) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var date = local.parse(string);\n\t          return date && date._;\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      };\n\t      format.toString = local.toString;\n\t      return format;\n\t    };\n\t    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n\t    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n\t    locale_periods.forEach(function(p, i) {\n\t      d3_time_periodLookup.set(p.toLowerCase(), i);\n\t    });\n\t    var d3_time_formats = {\n\t      a: function(d) {\n\t        return locale_shortDays[d.getDay()];\n\t      },\n\t      A: function(d) {\n\t        return locale_days[d.getDay()];\n\t      },\n\t      b: function(d) {\n\t        return locale_shortMonths[d.getMonth()];\n\t      },\n\t      B: function(d) {\n\t        return locale_months[d.getMonth()];\n\t      },\n\t      c: d3_time_format(locale_dateTime),\n\t      d: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      e: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      H: function(d, p) {\n\t        return d3_time_formatPad(d.getHours(), p, 2);\n\t      },\n\t      I: function(d, p) {\n\t        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t      },\n\t      j: function(d, p) {\n\t        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t      },\n\t      L: function(d, p) {\n\t        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t      },\n\t      m: function(d, p) {\n\t        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t      },\n\t      M: function(d, p) {\n\t        return d3_time_formatPad(d.getMinutes(), p, 2);\n\t      },\n\t      p: function(d) {\n\t        return locale_periods[+(d.getHours() >= 12)];\n\t      },\n\t      S: function(d, p) {\n\t        return d3_time_formatPad(d.getSeconds(), p, 2);\n\t      },\n\t      U: function(d, p) {\n\t        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t      },\n\t      w: function(d) {\n\t        return d.getDay();\n\t      },\n\t      W: function(d, p) {\n\t        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t      },\n\t      x: d3_time_format(locale_date),\n\t      X: d3_time_format(locale_time),\n\t      y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t      },\n\t      Y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t      },\n\t      Z: d3_time_zone,\n\t      \"%\": function() {\n\t        return \"%\";\n\t      }\n\t    };\n\t    var d3_time_parsers = {\n\t      a: d3_time_parseWeekdayAbbrev,\n\t      A: d3_time_parseWeekday,\n\t      b: d3_time_parseMonthAbbrev,\n\t      B: d3_time_parseMonth,\n\t      c: d3_time_parseLocaleFull,\n\t      d: d3_time_parseDay,\n\t      e: d3_time_parseDay,\n\t      H: d3_time_parseHour24,\n\t      I: d3_time_parseHour24,\n\t      j: d3_time_parseDayOfYear,\n\t      L: d3_time_parseMilliseconds,\n\t      m: d3_time_parseMonthNumber,\n\t      M: d3_time_parseMinutes,\n\t      p: d3_time_parseAmPm,\n\t      S: d3_time_parseSeconds,\n\t      U: d3_time_parseWeekNumberSunday,\n\t      w: d3_time_parseWeekdayNumber,\n\t      W: d3_time_parseWeekNumberMonday,\n\t      x: d3_time_parseLocaleDate,\n\t      X: d3_time_parseLocaleTime,\n\t      y: d3_time_parseYear,\n\t      Y: d3_time_parseFullYear,\n\t      Z: d3_time_parseZone,\n\t      \"%\": d3_time_parseLiteralPercent\n\t    };\n\t    function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t      d3_time_dayAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseWeekday(date, string, i) {\n\t      d3_time_dayRe.lastIndex = 0;\n\t      var n = d3_time_dayRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonthAbbrev(date, string, i) {\n\t      d3_time_monthAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonth(date, string, i) {\n\t      d3_time_monthRe.lastIndex = 0;\n\t      var n = d3_time_monthRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseLocaleFull(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleDate(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleTime(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t    }\n\t    function d3_time_parseAmPm(date, string, i) {\n\t      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n\t      return n == null ? -1 : (date.p = n, i);\n\t    }\n\t    return d3_time_format;\n\t  }\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  function d3_time_formatMulti(formats) {\n\t    var n = formats.length, i = -1;\n\t    while (++i < n) formats[i][0] = this(formats[i][0]);\n\t    return function(date) {\n\t      var i = 0, f = formats[i];\n\t      while (!f[1](date)) f = formats[++i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  d3.locale = function(locale) {\n\t    return {\n\t      numberFormat: d3_locale_numberFormat(locale),\n\t      timeFormat: d3_locale_timeFormat(locale)\n\t    };\n\t  };\n\t  var d3_locale_enUS = d3.locale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [ 3 ],\n\t    currency: [ \"$\", \"\" ],\n\t    dateTime: \"%a %b %e %X %Y\",\n\t    date: \"%m/%d/%Y\",\n\t    time: \"%H:%M:%S\",\n\t    periods: [ \"AM\", \"PM\" ],\n\t    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n\t    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n\t    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n\t  });\n\t  d3.format = d3_locale_enUS.numberFormat;\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          if (n > 0) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t            listener.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n\t        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      if (F > 0) {\n\t        if (φ < -halfπ + ε) φ = -halfπ + ε;\n\t      } else {\n\t        if (φ > halfπ - ε) φ = halfπ - ε;\n\t      }\n\t      var ρ = F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return rotate([ 0, 0, 90 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n\t      for (i = 0; i < n; i++) {\n\t        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n\t      }\n\t      points.sort(d3_geom_hullOrder);\n\t      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n\t      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n\t      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n\t      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n\t      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n\t      return polygon;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullUpper(points) {\n\t    var n = points.length, hull = [ 0, 1 ], hs = 2;\n\t    for (var i = 2; i < n; i++) {\n\t      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n\t      hull[hs++] = i;\n\t    }\n\t    return hull.slice(0, hs);\n\t  }\n\t  function d3_geom_hullOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = xm; else x2 = xm;\n\t        if (below) y1 = ym; else y2 = ym;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      root.find = function(point) {\n\t        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n\t    var minDistance2 = Infinity, closestPoint;\n\t    (function find(node, x1, y1, x2, y2) {\n\t      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\t      if (point = node.point) {\n\t        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n\t        if (distance2 < minDistance2) {\n\t          var distance = Math.sqrt(minDistance2 = distance2);\n\t          x0 = x - distance, y0 = y - distance;\n\t          x3 = x + distance, y3 = y + distance;\n\t          closestPoint = point;\n\t        }\n\t      }\n\t      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n\t      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n\t        if (node = children[i & 3]) switch (i & 3) {\n\t         case 0:\n\t          find(node, x1, y1, xm, ym);\n\t          break;\n\t\n\t         case 1:\n\t          find(node, xm, y1, x2, ym);\n\t          break;\n\t\n\t         case 2:\n\t          find(node, x1, ym, xm, y2);\n\t          break;\n\t\n\t         case 3:\n\t          find(node, xm, ym, x2, y2);\n\t          break;\n\t        }\n\t      }\n\t    })(root, x0, y0, x3, y3);\n\t    return closestPoint;\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    a = +a, b = +b;\n\t    return function(t) {\n\t      return a * (1 - t) + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n\t    a = a + \"\", b = b + \"\";\n\t    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n\t      if ((bs = bm.index) > bi) {\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) {\n\t        if (s[i]) s[i] += bm; else s[++i] = bm;\n\t      } else {\n\t        s[++i] = null;\n\t        q.push({\n\t          i: i,\n\t          x: d3_interpolateNumber(am, bm)\n\t        });\n\t      }\n\t      bi = d3_interpolate_numberB.lastIndex;\n\t    }\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; else s[++i] = bs;\n\t    }\n\t    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n\t      return b(t) + \"\";\n\t    }) : function() {\n\t      return b;\n\t    } : (b = q.length, function(t) {\n\t      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    });\n\t  }\n\t  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransformPop(s) {\n\t    return s.length ? s.pop() + \",\" : \"\";\n\t  }\n\t  function d3_interpolateTranslate(ta, tb, s, q) {\n\t    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n\t      var i = s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateRotate(ra, rb, s, q) {\n\t    if (ra !== rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateSkew(wa, wb, s, q) {\n\t    if (wa !== wb) {\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateScale(ka, kb, s, q) {\n\t    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n\t      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] !== 1 || kb[1] !== 1) {\n\t      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [];\n\t    a = d3.transform(a), b = d3.transform(b);\n\t    d3_interpolateTranslate(a.translate, b.translate, s, q);\n\t    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n\t    d3_interpolateSkew(a.skew, b.skew, s, q);\n\t    d3_interpolateScale(a.scale, b.scale, s, q);\n\t    a = b = null;\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return (x - a) / b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) / b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: groupSums[di]\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n\t          if (dw * dw / theta2 < dn) {\n\t            if (dn < chargeDistance2) {\n\t              var k = quad.charge / dn;\n\t              node.px -= dx * k;\n\t              node.py -= dy * k;\n\t            }\n\t            return true;\n\t          }\n\t          if (quad.point && dn && dn < chargeDistance2) {\n\t            var k = quad.pointCharge / dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        timer = null;\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.chargeDistance = function(x) {\n\t      if (!arguments.length) return Math.sqrt(chargeDistance2);\n\t      chargeDistance2 = x * x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return Math.sqrt(theta2);\n\t      theta2 = x * x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) {\n\t          alpha = x;\n\t        } else {\n\t          timer.c = null, timer.t = NaN, timer = null;\n\t          event.end({\n\t            type: \"end\",\n\t            alpha: alpha = 0\n\t          });\n\t        }\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        timer = d3_timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n\t        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function hierarchy(root) {\n\t      var stack = [ root ], nodes = [], node;\n\t      root.depth = 0;\n\t      while ((node = stack.pop()) != null) {\n\t        nodes.push(node);\n\t        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n\t          var n, childs, child;\n\t          while (--n >= 0) {\n\t            stack.push(child = childs[n]);\n\t            child.parent = node;\n\t            child.depth = node.depth + 1;\n\t          }\n\t          if (value) node.value = 0;\n\t          node.children = childs;\n\t        } else {\n\t          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          delete node.children;\n\t        }\n\t      }\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var childs, parent;\n\t        if (sort && (childs = node.children)) childs.sort(sort);\n\t        if (value && (parent = node.parent)) parent.value += node.value;\n\t      });\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      if (value) {\n\t        d3_layout_hierarchyVisitBefore(root, function(node) {\n\t          if (node.children) node.value = 0;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, function(node) {\n\t          var parent;\n\t          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          if (parent = node.parent) parent.value += node.value;\n\t        });\n\t      }\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyVisitBefore(node, callback) {\n\t    var nodes = [ node ];\n\t    while ((node = nodes.pop()) != null) {\n\t      callback(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var n, children;\n\t        while (--n >= 0) nodes.push(children[n]);\n\t      }\n\t    }\n\t  }\n\t  function d3_layout_hierarchyVisitAfter(node, callback) {\n\t    var nodes = [ node ], nodes2 = [];\n\t    while ((node = nodes.pop()) != null) {\n\t      nodes2.push(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var i = -1, n, children;\n\t        while (++i < n) nodes.push(children[i]);\n\t      }\n\t    }\n\t    while ((node = nodes2.pop()) != null) {\n\t      callback(node);\n\t    }\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n\t    function pie(data) {\n\t      var n = data.length, values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      index.forEach(function(i) {\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: v = values[i],\n\t          startAngle: a,\n\t          endAngle: a += v * k + pa,\n\t          padAngle: p\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(_) {\n\t      if (!arguments.length) return value;\n\t      value = _;\n\t      return pie;\n\t    };\n\t    pie.sort = function(_) {\n\t      if (!arguments.length) return sort;\n\t      sort = _;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(_) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = _;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(_) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = _;\n\t      return pie;\n\t    };\n\t    pie.padAngle = function(_) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = _;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      if (!(n = data.length)) return data;\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var m = series[0].length, n, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n\t      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n\t      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n\t      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n\t        var left = root0, right = root0, bottom = root0;\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t      return nodes;\n\t    }\n\t    function wrapTree(root0) {\n\t      var root1 = {\n\t        A: null,\n\t        children: [ root0 ]\n\t      }, queue = [ root1 ], node1;\n\t      while ((node1 = queue.pop()) != null) {\n\t        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n\t          queue.push((children[i] = child = {\n\t            _: children[i],\n\t            parent: node1,\n\t            children: (child = children[i].children) && child.slice() || [],\n\t            A: null,\n\t            a: null,\n\t            z: 0,\n\t            m: 0,\n\t            c: 0,\n\t            s: 0,\n\t            t: null,\n\t            i: i\n\t          }).a = child);\n\t        }\n\t      }\n\t      return root1.children[0];\n\t    }\n\t    function firstWalk(v) {\n\t      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n\t      if (children.length) {\n\t        d3_layout_treeShift(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n\t        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t          vom = d3_layout_treeLeft(vom);\n\t          vop = d3_layout_treeRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !d3_layout_treeRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !d3_layout_treeLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t    function sizeNode(node) {\n\t      node.x *= size[0];\n\t      node.y = node.depth * size[1];\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null ? sizeNode : null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) == null ? null : sizeNode;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(v) {\n\t    var children = v.children;\n\t    return children.length ? children[0] : v.t;\n\t  }\n\t  function d3_layout_treeRight(v) {\n\t    var children = v.children, n;\n\t    return (n = children.length) ? children[n - 1] : v.t;\n\t  }\n\t  function d3_layout_treeMove(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t  function d3_layout_treeShift(v) {\n\t    var shift = 0, change = 0, children = v.children, i = children.length, w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t  function d3_layout_treeAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = root.y = 0;\n\t      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    return domain;\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    if (format) {\n\t      var match = d3_format_re.exec(format);\n\t      match.shift();\n\t      if (match[8] === \"s\") {\n\t        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n\t        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n\t        match[8] = \"f\";\n\t        format = d3.format(match.join(\"\"));\n\t        return function(d) {\n\t          return format(prefix.scale(d)) + prefix.symbol;\n\t        };\n\t      }\n\t      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n\t      format = match.join(\"\");\n\t    } else {\n\t      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n\t    }\n\t    return d3.format(format);\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(1, base * n / scale.ticks().length);\n\t      return function(d) {\n\t        var i = d / pow(Math.round(log(d)));\n\t        if (i * base < base - .5) i *= base;\n\t        return i <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n\t      0) : (stop - start) / (domain.length - 1 + padding);\n\t      range = steps(start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundPoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n\t      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n\t      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangeRoundPoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n\t      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  function d3_zero() {\n\t    return 0;\n\t  }\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n\t    function arc() {\n\t      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n\t      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n\t      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n\t      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n\t      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n\t        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n\t        if (!cw) p1 *= -1;\n\t        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n\t        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n\t      }\n\t      if (r1) {\n\t        x0 = r1 * Math.cos(a0 + p1);\n\t        y0 = r1 * Math.sin(a0 + p1);\n\t        x1 = r1 * Math.cos(a1 - p1);\n\t        y1 = r1 * Math.sin(a1 - p1);\n\t        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\t        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n\t          var h1 = (a0 + a1) / 2;\n\t          x0 = r1 * Math.cos(h1);\n\t          y0 = r1 * Math.sin(h1);\n\t          x1 = y1 = null;\n\t        }\n\t      } else {\n\t        x0 = y0 = 0;\n\t      }\n\t      if (r0) {\n\t        x2 = r0 * Math.cos(a1 - p0);\n\t        y2 = r0 * Math.sin(a1 - p0);\n\t        x3 = r0 * Math.cos(a0 + p0);\n\t        y3 = r0 * Math.sin(a0 + p0);\n\t        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\t        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n\t          var h0 = (a0 + a1) / 2;\n\t          x2 = r0 * Math.cos(h0);\n\t          y2 = r0 * Math.sin(h0);\n\t          x3 = y3 = null;\n\t        }\n\t      } else {\n\t        x2 = y2 = 0;\n\t      }\n\t      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n\t        cr = r0 < r1 ^ cw ? 0 : 1;\n\t        var rc1 = rc, rc0 = rc;\n\t        if (da < π) {\n\t          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t        if (x1 != null) {\n\t          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n\t          if (rc === rc1) {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n\t          } else {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n\t          }\n\t        } else {\n\t          path.push(\"M\", x0, \",\", y0);\n\t        }\n\t        if (x3 != null) {\n\t          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n\t          if (rc === rc0) {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          } else {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          }\n\t        } else {\n\t          path.push(\"L\", x2, \",\", y2);\n\t        }\n\t      } else {\n\t        path.push(\"M\", x0, \",\", y0);\n\t        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n\t        path.push(\"L\", x2, \",\", y2);\n\t        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n\t      }\n\t      path.push(\"Z\");\n\t      return path.join(\"\");\n\t    }\n\t    function circleSegment(r1, cw) {\n\t      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.cornerRadius = function(v) {\n\t      if (!arguments.length) return cornerRadius;\n\t      cornerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padRadius = function(v) {\n\t      if (!arguments.length) return padRadius;\n\t      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padAngle = function(v) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcAuto = \"auto\";\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_arcPadAngle(d) {\n\t    return d && d.padAngle;\n\t  }\n\t  function d3_svg_arcSweep(x0, y0, x1, y1) {\n\t    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n\t  }\n\t  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n\t    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return points.join(\"L\") + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] - halfπ;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  d3_selectionPrototype.transition = function(name) {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function(name) {\n\t    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n\t  };\n\t  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\t  function d3_selection_interruptNS(ns) {\n\t    return function() {\n\t      var lock, activeId, active;\n\t      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        if (--lock.count) delete lock[activeId]; else delete this[ns];\n\t        lock.active += .5;\n\t        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n\t      }\n\t    };\n\t  }\n\t  function d3_transition(groups, ns, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.namespace = ns;\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection, name) {\n\t    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.namespace, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node[ns][id].tween.remove(name);\n\t    } : function(node) {\n\t      node[ns][id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id, ns = groups.namespace;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node[ns][id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    var ns = this.namespace;\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node[ns][id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].delay;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node[ns][id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].duration;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node[ns][id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      try {\n\t        d3_transitionInheritId = id;\n\t        d3_selection_each(this, function(node, i, j) {\n\t          d3_transitionInherit = node[ns][id];\n\t          type.call(node, node.__data__, i, j);\n\t        });\n\t      } finally {\n\t        d3_transitionInherit = inherit;\n\t        d3_transitionInheritId = inheritId;\n\t      }\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node[ns][id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id0];\n\t          d3_transitionNode(node, i, ns, id1, {\n\t            time: transition.time,\n\t            ease: transition.ease,\n\t            delay: transition.delay + transition.duration,\n\t            duration: transition.duration\n\t          });\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id1);\n\t  };\n\t  function d3_transitionNamespace(name) {\n\t    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n\t  }\n\t  function d3_transitionNode(node, i, ns, id, inherit) {\n\t    var lock = node[ns] || (node[ns] = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id], time, timer, duration, ease, tweens;\n\t    function schedule(elapsed) {\n\t      var delay = transition.delay;\n\t      timer.t = delay + time;\n\t      if (delay <= elapsed) return start(elapsed - delay);\n\t      timer.c = start;\n\t    }\n\t    function start(elapsed) {\n\t      var activeId = lock.active, active = lock[activeId];\n\t      if (active) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        --lock.count;\n\t        delete lock[activeId];\n\t        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n\t      }\n\t      for (var cancelId in lock) {\n\t        if (+cancelId < id) {\n\t          var cancel = lock[cancelId];\n\t          cancel.timer.c = null;\n\t          cancel.timer.t = NaN;\n\t          --lock.count;\n\t          delete lock[cancelId];\n\t        }\n\t      }\n\t      timer.c = tick;\n\t      d3_timer(function() {\n\t        if (timer.c && tick(elapsed || 1)) {\n\t          timer.c = null;\n\t          timer.t = NaN;\n\t        }\n\t        return 1;\n\t      }, 0, time);\n\t      lock.active = id;\n\t      transition.event && transition.event.start.call(node, node.__data__, i);\n\t      tweens = [];\n\t      transition.tween.forEach(function(key, value) {\n\t        if (value = value.call(node, node.__data__, i)) {\n\t          tweens.push(value);\n\t        }\n\t      });\n\t      ease = transition.ease;\n\t      duration = transition.duration;\n\t    }\n\t    function tick(elapsed) {\n\t      var t = elapsed / duration, e = ease(t), n = tweens.length;\n\t      while (n > 0) {\n\t        tweens[--n].call(node, e);\n\t      }\n\t      if (t >= 1) {\n\t        transition.event && transition.event.end.call(node, node.__data__, i);\n\t        if (--lock.count) delete lock[id]; else delete node[ns];\n\t        return 1;\n\t      }\n\t    }\n\t    if (!transition) {\n\t      time = inherit.time;\n\t      timer = d3_timer(schedule, 0, time);\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        timer: timer,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration,\n\t        ease: inherit.ease,\n\t        index: i\n\t      };\n\t      inherit = null;\n\t      ++lock.count;\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n\t        if (orient === \"bottom\" || orient === \"top\") {\n\t          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n\t          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n\t          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n\t        } else {\n\t          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n\t          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n\t          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n\t        }\n\t        lineEnter.attr(y2, sign * innerTickSize);\n\t        textEnter.attr(y1, sign * tickSpacing);\n\t        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n\t        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1, scale0);\n\t        }\n\t        tickEnter.call(tickTransform, scale0, scale1);\n\t        tickUpdate.call(tickTransform, scale1, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = d3_array(arguments);\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x0, x1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = x0(d);\n\t      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y0, y1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = y0(d);\n\t      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n\t  var d3_time_formatUtc = d3_time_format.utc;\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n\t    return d.getMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.e = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n\t}();\n\n/***/ },\n\n/***/ 206:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.e = function() {\n\t\treturn new Worker(__webpack_require__.p + \"f6ead91c4aefffdf8f59.worker.js\");\n\t};\n\n/***/ },\n\n/***/ 207:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(52);\n\t/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __WEBPACK_IMPORTED_MODULE_0_react__ && __WEBPACK_IMPORTED_MODULE_0_react__.__esModule ? function() { return __WEBPACK_IMPORTED_MODULE_0_react__['default'] } : function() { return __WEBPACK_IMPORTED_MODULE_0_react__; }\n\t/* harmony import */ Object.defineProperty(__WEBPACK_IMPORTED_MODULE_0_react___default, 'a', { get: __WEBPACK_IMPORTED_MODULE_0_react___default });\n\t/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_dom__ = __webpack_require__(91);\n\t/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_dom___default = __WEBPACK_IMPORTED_MODULE_1_react_dom__ && __WEBPACK_IMPORTED_MODULE_1_react_dom__.__esModule ? function() { return __WEBPACK_IMPORTED_MODULE_1_react_dom__['default'] } : function() { return __WEBPACK_IMPORTED_MODULE_1_react_dom__; }\n\t/* harmony import */ Object.defineProperty(__WEBPACK_IMPORTED_MODULE_1_react_dom___default, 'a', { get: __WEBPACK_IMPORTED_MODULE_1_react_dom___default });\n\t/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_redux__ = __webpack_require__(69);\n\t/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_redux___default = __WEBPACK_IMPORTED_MODULE_2_redux__ && __WEBPACK_IMPORTED_MODULE_2_redux__.__esModule ? function() { return __WEBPACK_IMPORTED_MODULE_2_redux__['default'] } : function() { return __WEBPACK_IMPORTED_MODULE_2_redux__; }\n\t/* harmony import */ Object.defineProperty(__WEBPACK_IMPORTED_MODULE_2_redux___default, 'a', { get: __WEBPACK_IMPORTED_MODULE_2_redux___default });\n\t/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_redux__ = __webpack_require__(92);\n\t/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_redux___default = __WEBPACK_IMPORTED_MODULE_3_react_redux__ && __WEBPACK_IMPORTED_MODULE_3_react_redux__.__esModule ? function() { return __WEBPACK_IMPORTED_MODULE_3_react_redux__['default'] } : function() { return __WEBPACK_IMPORTED_MODULE_3_react_redux__; }\n\t/* harmony import */ Object.defineProperty(__WEBPACK_IMPORTED_MODULE_3_react_redux___default, 'a', { get: __WEBPACK_IMPORTED_MODULE_3_react_redux___default });\n\t/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_d3__ = __webpack_require__(204);\n\t/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_d3___default = __WEBPACK_IMPORTED_MODULE_4_d3__ && __WEBPACK_IMPORTED_MODULE_4_d3__.__esModule ? function() { return __WEBPACK_IMPORTED_MODULE_4_d3__['default'] } : function() { return __WEBPACK_IMPORTED_MODULE_4_d3__; }\n\t/* harmony import */ Object.defineProperty(__WEBPACK_IMPORTED_MODULE_4_d3___default, 'a', { get: __WEBPACK_IMPORTED_MODULE_4_d3___default });\n\t/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__actions__ = __webpack_require__(136);\n\t/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__reducer__ = __webpack_require__(202);\n\t/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_worker_worker__ = __webpack_require__(206);\n\t/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_worker_worker___default = __WEBPACK_IMPORTED_MODULE_7_worker_worker__ && __WEBPACK_IMPORTED_MODULE_7_worker_worker__.__esModule ? function() { return __WEBPACK_IMPORTED_MODULE_7_worker_worker__['default'] } : function() { return __WEBPACK_IMPORTED_MODULE_7_worker_worker__; }\n\t/* harmony import */ Object.defineProperty(__WEBPACK_IMPORTED_MODULE_7_worker_worker___default, 'a', { get: __WEBPACK_IMPORTED_MODULE_7_worker_worker___default });\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\tvar SimcoGraph = function (_React$Component) {\n\t    _inherits(SimcoGraph, _React$Component);\n\t\n\t    function SimcoGraph() {\n\t        _classCallCheck(this, SimcoGraph);\n\t\n\t        return _possibleConstructorReturn(this, Object.getPrototypeOf(SimcoGraph).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(SimcoGraph, [{\n\t        key: 'componentDidMount',\n\t        value: function componentDidMount() {\n\t            this.displaySVGChart();\n\t        }\n\t    }, {\n\t        key: 'componentDidUpdate',\n\t        value: function componentDidUpdate() {\n\t            this.displaySVGChart();\n\t        }\n\t    }, {\n\t        key: 'displaySVGChart',\n\t        value: function displaySVGChart() {\n\t            this.refs.svgChart.innerHTML = null;\n\t            var data = this.props.results.get('data');\n\t\n\t            var margin = { top: 50, right: 50, bottom: 50, left: 50 },\n\t                width = this.refs.svgChart.getBoundingClientRect().width - margin.left - margin.right,\n\t                height = 500 - margin.top - margin.bottom;\n\t\n\t            var x = /* harmony import */__WEBPACK_IMPORTED_MODULE_4_d3___default.a.scale.ordinal().rangeRoundBands([0, width], .1);\n\t\n\t            var y = /* harmony import */__WEBPACK_IMPORTED_MODULE_4_d3___default.a.scale.linear().range([height, 0]);\n\t\n\t            var xAxis = /* harmony import */__WEBPACK_IMPORTED_MODULE_4_d3___default.a.svg.axis().scale(x).orient(\"bottom\");\n\t\n\t            var yAxis = /* harmony import */__WEBPACK_IMPORTED_MODULE_4_d3___default.a.svg.axis().scale(y).orient(\"left\").ticks(10, \"%\");\n\t\n\t            var svg = /* harmony import */__WEBPACK_IMPORTED_MODULE_4_d3___default.a.select(this.refs.svgChart).append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\t\n\t            x.domain(data.map(function (d) {\n\t                return d.label;\n\t            }));\n\t            y.domain([0, /* harmony import */__WEBPACK_IMPORTED_MODULE_4_d3___default.a.max(data, function (d) {\n\t                return d.freq;\n\t            })]);\n\t\n\t            svg.append(\"g\").attr(\"class\", \"x axis\").attr(\"transform\", \"translate(0,\" + height + \")\").call(xAxis).append(\"text\").attr(\"transform\", \"translate(\" + (width - 100) + \", 30)\").text(\"Trajets partagés\");\n\t\n\t            svg.append(\"g\").attr(\"class\", \"y axis\").call(yAxis).append(\"text\").attr(\"transform\", \"rotate(-90)\").attr(\"y\", 6).attr(\"dy\", \".71em\").style(\"text-anchor\", \"end\").text(\"Fréquence\");\n\t\n\t            svg.selectAll(\".bar\").data(data).enter().append(\"rect\").attr(\"class\", \"bar\").attr(\"x\", function (d) {\n\t                return x(d.label);\n\t            }).attr(\"width\", x.rangeBand()).attr(\"y\", function (d) {\n\t                return y(d.freq);\n\t            }).attr(\"height\", function (d) {\n\t                return height - y(d.freq);\n\t            });\n\t        }\n\t    }, {\n\t        key: 'render',\n\t        value: function render() {\n\t            return /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div', { ref: 'svgChart', style: { marginTop: '50px' } });\n\t        }\n\t    }]);\n\t\n\t    return SimcoGraph;\n\t}(/* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);\n\t\n\tvar SimcoUnconnected = function (_React$Component2) {\n\t    _inherits(SimcoUnconnected, _React$Component2);\n\t\n\t    function SimcoUnconnected() {\n\t        _classCallCheck(this, SimcoUnconnected);\n\t\n\t        return _possibleConstructorReturn(this, Object.getPrototypeOf(SimcoUnconnected).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(SimcoUnconnected, [{\n\t        key: 'render',\n\t        value: function render() {\n\t            var _this3 = this;\n\t\n\t            return /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n\t                'div',\n\t                { style: { width: '80%', margin: 'auto' } },\n\t                /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n\t                    'div',\n\t                    { style: { display: 'flex', flexDirection: 'row', maxWidth: '600px', margin: 'auto' } },\n\t                    /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n\t                        'div',\n\t                        { style: { flex: 1, padding: '5px' } },\n\t                        /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n\t                            'label',\n\t                            { style: { display: 'block', marginBottom: '5px' } },\n\t                            'Trajet(s) unique(s)'\n\t                        ),\n\t                        /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {\n\t                            min: '1',\n\t                            onChange: function onChange(e) {\n\t                                _this3.props.dispatch({\n\t                                    type: /* harmony namespace import */ __WEBPACK_IMPORTED_MODULE_5__actions__.CHANGE_UNIQUE_RIDES,\n\t                                    uniqueRides: e.target.value\n\t                                });\n\t                            },\n\t                            style: { width: '100%' },\n\t                            type: 'number',\n\t                            step: '1',\n\t                            value: this.props.uniqueRides\n\t                        })\n\t                    ),\n\t                    /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n\t                        'div',\n\t                        { style: { flex: 1, padding: '5px' } },\n\t                        /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n\t                            'label',\n\t                            { style: { display: 'block', marginBottom: '5px' } },\n\t                            'Voyageur(s)'\n\t                        ),\n\t                        /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {\n\t                            min: '1',\n\t                            onChange: function onChange(e) {\n\t                                _this3.props.dispatch({\n\t                                    type: /* harmony namespace import */ __WEBPACK_IMPORTED_MODULE_5__actions__.CHANGE_PEOPLE,\n\t                                    people: e.target.value\n\t                                });\n\t                            },\n\t                            style: { width: '100%' },\n\t                            type: 'number',\n\t                            step: '1',\n\t                            value: this.props.people\n\t                        })\n\t                    ),\n\t                    /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n\t                        'div',\n\t                        { style: { flex: 1, padding: '5px', display: 'flex', alignItems: 'flex-end' } },\n\t                        /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n\t                            'button',\n\t                            { onClick: function onClick() {\n\t                                    _this3.props.dispatch({ type: /* harmony namespace import */ __WEBPACK_IMPORTED_MODULE_5__actions__.START_COMPUTE });\n\t                                }, style: { height: '37px', width: '100%' } },\n\t                            'Calculer'\n\t                        )\n\t                    )\n\t                ),\n\t                this.props.results.get('hasComputed') ? /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(SimcoGraph, { results: this.props.results }) : null\n\t            );\n\t        }\n\t    }]);\n\t\n\t    return SimcoUnconnected;\n\t}(/* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);\n\t\n\tvar select = function select(state) {\n\t    return {\n\t        uniqueRides: state.get('uniqueRides'),\n\t        people: state.get('people'),\n\t        results: state.get('results')\n\t    };\n\t};\n\t\n\tvar Simco = /* harmony import */__WEBPACK_IMPORTED_MODULE_3_react_redux__[\"connect\"].bind()(select)(SimcoUnconnected);\n\t\n\tfunction mountSimcoApp(options) {\n\t    var worker = new /* harmony import */__WEBPACK_IMPORTED_MODULE_7_worker_worker___default.a();\n\t\n\t    var store = /* harmony import */__WEBPACK_IMPORTED_MODULE_2_redux__[\"createStore\"].bind()(/* harmony import */__WEBPACK_IMPORTED_MODULE_6__reducer__[\"a\"].bind()(worker));\n\t\n\t    worker.onmessage = function (event) {\n\t        store.dispatch({\n\t            type: /* harmony namespace import */ __WEBPACK_IMPORTED_MODULE_5__actions__.END_COMPUTE,\n\t            data: event.data.formattedFrequencies\n\t        });\n\t    };\n\t\n\t    /* harmony import */__WEBPACK_IMPORTED_MODULE_1_react_dom___default.a.render(/* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n\t        /* harmony import */__WEBPACK_IMPORTED_MODULE_3_react_redux__[\"Provider\"],\n\t        { store: store },\n\t        /* harmony import */__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(Simco, null)\n\t    ), options.node);\n\t}\n\t\n\twindow.mountSimcoApp = mountSimcoApp;\n\n/***/ }\n\n},[207]);\n\n\n/** WEBPACK FOOTER **\n ** app.js\n **/","export const CHANGE_UNIQUE_RIDES = 'CHANGE_UNIQUE_RIDES';\nexport const CHANGE_PEOPLE = 'CHANGE_PEOPLE';\n\nexport const START_COMPUTE = 'START_COMPUTE';\nexport const END_COMPUTE = 'END_COMPUTE';\n\n\n\n/** WEBPACK FOOTER **\n ** ./actions.js\n **/","import Immutable from 'immutable';\n\nimport * as actions from './actions';\n\n\nfunction makeResults(worker) {\n    return function results(state, action, wholeState) {\n        if(state === undefined) {\n            state = Immutable.Map({\n                isComputing: false,\n                hasComputed: false,\n                data: []\n            });\n        }\n\n        if(action.type === actions.START_COMPUTE) {\n            worker.postMessage({\n                MAX_LENGTH: 20,\n                PEOPLE_IN_CAR: 2,\n                ITERATIONS: 1000,\n                people: wholeState.get('people'),\n                uniqueRides: wholeState.get('uniqueRides')\n            });\n            return state.set('isComputing', true);\n        }\n\n        if(action.type === actions.END_COMPUTE) {\n            state = state.set('isComputing', false);\n            state = state.set('hasComputed', true);\n            return state.set('data', action.data);\n        }\n\n        return state;\n    }\n}\n\n\nfunction uniqueRides(state=1, action) {\n    if(action.type === actions.CHANGE_UNIQUE_RIDES) {\n        return parseInt(action.uniqueRides);\n    }\n\n    return state;\n}\n\n\nfunction people(state=1, action) {\n    if(action.type === actions.CHANGE_PEOPLE) {\n        return parseInt(action.people);\n    }\n\n    return state;\n}\n\n\nexport default function makeReducer(worker) {\n    const results = makeResults(worker);\n\n    return function(state, action) {\n        if(state === undefined) {\n            state = Immutable.Map();\n        }\n\n        state = state.set('uniqueRides', uniqueRides(state.get('uniqueRides'), action));\n        state = state.set('people', people(state.get('people'), action));\n        state = state.set('results', results(state.get('results'), action, state));\n\n        return state;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./reducer.js\n **/","!function() {\n  var d3 = {\n    version: \"3.5.16\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/d3/d3.js\n ** module id = 204\n ** module chunks = 1\n **/","module.exports = function() {\n\treturn new Worker(__webpack_public_path__ + \"f6ead91c4aefffdf8f59.worker.js\");\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/worker-loader!./worker.js\n ** module id = 206\n ** module chunks = 1\n **/","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider, connect } from 'react-redux';\n\nimport d3 from 'd3';\n\nimport * as actions from './actions';\nimport makeReducer from './reducer';\nimport SimcoWorker from 'worker!./worker';\n\n\nclass SimcoGraph extends React.Component {\n\n    componentDidMount() {\n        this.displaySVGChart();\n    }\n\n    componentDidUpdate() {\n        this.displaySVGChart();\n    }\n\n    displaySVGChart() {\n        this.refs.svgChart.innerHTML = null;\n        let data = this.props.results.get('data');\n\n        var margin = {top: 50, right: 50, bottom: 50, left: 50},\n            width = this.refs.svgChart.getBoundingClientRect().width - margin.left - margin.right,\n            height = 500 - margin.top - margin.bottom;\n\n        var x = d3.scale.ordinal()\n            .rangeRoundBands([0, width], .1);\n\n        var y = d3.scale.linear()\n            .range([height, 0]);\n\n        var xAxis = d3.svg.axis()\n            .scale(x)\n            .orient(\"bottom\");\n\n        var yAxis = d3.svg.axis()\n            .scale(y)\n            .orient(\"left\")\n            .ticks(10, \"%\");\n\n        var svg = d3.select(this.refs.svgChart).append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        x.domain(data.map(function(d) { return d.label; }));\n        y.domain([0, d3.max(data, function(d) { return d.freq; })]);\n\n        svg.append(\"g\")\n            .attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(xAxis)\n            .append(\"text\")\n            .attr(\"transform\", \"translate(\" + (width - 100) + \", 30)\")\n            .text(\"Trajets partagés\");\n\n        svg.append(\"g\")\n            .attr(\"class\", \"y axis\")\n            .call(yAxis)\n            .append(\"text\")\n            .attr(\"transform\", \"rotate(-90)\")\n            .attr(\"y\", 6)\n            .attr(\"dy\", \".71em\")\n            .style(\"text-anchor\", \"end\")\n            .text(\"Fréquence\");\n\n        svg.selectAll(\".bar\")\n            .data(data)\n            .enter().append(\"rect\")\n            .attr(\"class\", \"bar\")\n            .attr(\"x\", function(d) { return x(d.label); })\n            .attr(\"width\", x.rangeBand())\n            .attr(\"y\", function(d) { return y(d.freq); })\n            .attr(\"height\", function(d) { return height - y(d.freq); });\n    }\n\n    render() {\n        return <div ref='svgChart' style={{marginTop: '50px'}}></div>;\n    }\n\n}\n\n\nclass SimcoUnconnected extends React.Component {\n\n    render() {\n        return (<div style={{width: '80%', margin: 'auto'}}>\n            <div style={{display: 'flex', flexDirection: 'row', maxWidth: '600px', margin: 'auto'}}>\n                <div style={{flex: 1, padding: '5px'}}>\n                    <label style={{display: 'block', marginBottom: '5px'}}>Trajet(s) unique(s)</label>\n                    <input\n                        min='1'\n                        onChange={(e) => { this.props.dispatch({\n                            type: actions.CHANGE_UNIQUE_RIDES,\n                            uniqueRides: e.target.value\n                        }); }}\n                        style={{width: '100%'}}\n                        type='number'\n                        step='1'\n                        value={this.props.uniqueRides}\n                    />\n                </div>\n                <div style={{flex: 1, padding: '5px'}}>\n                    <label style={{display: 'block', marginBottom: '5px'}}>Voyageur(s)</label>\n                    <input\n                        min='1'\n                        onChange={(e) => { this.props.dispatch({\n                            type: actions.CHANGE_PEOPLE,\n                            people: e.target.value\n                        }); }}\n                        style={{width: '100%'}}\n                        type='number'\n                        step='1'\n                        value={this.props.people}\n                    />\n                </div>\n                <div style={{flex: 1, padding: '5px', display: 'flex', alignItems: 'flex-end'}}>\n                    <button onClick={() => { this.props.dispatch({type: actions.START_COMPUTE}); }} style={{height: '37px', width: '100%'}}>Calculer</button>\n                </div>\n            </div>\n\n            {this.props.results.get('hasComputed') ?\n                <SimcoGraph results={this.props.results} />\n            : null}\n        </div>);\n    }\n\n}\n\n\nconst select = (state) => ({\n    uniqueRides: state.get('uniqueRides'),\n    people: state.get('people'),\n    results: state.get('results')\n});\n\n\nconst Simco = connect(select)(SimcoUnconnected);\n\n\nfunction mountSimcoApp(options) {\n    const worker = new SimcoWorker();\n\n    const store = createStore(makeReducer(worker));\n\n    worker.onmessage = function(event) {\n        store.dispatch({\n            type: actions.END_COMPUTE,\n            data: event.data.formattedFrequencies\n        })\n    }\n\n    ReactDOM.render(<Provider store={store}>\n        <Simco />\n    </Provider>, options.node);\n}\n\n\nwindow.mountSimcoApp = mountSimcoApp;\n\n\n\n/** WEBPACK FOOTER **\n ** ./main.js\n **/"],"sourceRoot":""}